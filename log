parse reformatted code
{}
annotate
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 95, 'ast_type': 'Load', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'body': [<_ast.FunctionDef object at 0x7fdca4de7a90>], 'first_token': Token(type=57, string='#numb: public(int128)', start=(1, 0), end=(1, 21), line='#numb: public(int128)\n', index=0, startpos=0, endpos=21), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 0, 'ast_type': 'Module', 'lineno': 1, 'col_offset': 0, 'end_lineno': 15, 'end_col_offset': 10, 'src': '0:289:0', 'node_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'name': 'calculate', 'args': <_ast.arguments object at 0x7fdca4de7a20>, 'body': [<_ast.AnnAssign object at 0x7fdca4de78d0>, <_ast.AnnAssign object at 0x7fdca4de7f98>, <_ast.AnnAssign object at 0x7fdca4e05080>, <_ast.AnnAssign object at 0x7fdca4e05208>, <_ast.AnnAssign object at 0x7fdca4e05358>, <_ast.If object at 0x7fdca4e05438>, <_ast.For object at 0x7fdca4e056a0>, <_ast.While object at 0x7fdca4e05898>], 'decorator_list': [<_ast.Name object at 0x7fdca4e059b0>], 'returns': None, 'lineno': 3, 'col_offset': 0, 'first_token': Token(type=53, string='@', start=(3, 0), end=(3, 1), line='@public\n', index=3, startpos=23, endpos=24), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 1, 'ast_type': 'FunctionDef', 'end_lineno': 15, 'end_col_offset': 10, 'src': '23:266:0', 'node_source_code': '@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'args': [<_ast.arg object at 0x7fdca4de79e8>], 'vararg': None, 'kwonlyargs': [], 'kw_defaults': [], 'kwarg': None, 'defaults': [], 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 2, 'ast_type': 'arguments', 'lineno': 4, 'col_offset': 14, 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'arg': 'y', 'annotation': <_ast.Name object at 0x7fdca4de7908>, 'lineno': 4, 'col_offset': 14, 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 3, 'ast_type': 'arg', 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 4, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 4, 'ast_type': 'Name', 'end_lineno': 4, 'end_col_offset': 23, 'src': '48:6:0', 'node_source_code': 'int128'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4de7748>, 'annotation': <_ast.Name object at 0x7fdca4de7860>, 'value': <_ast.NameConstant object at 0x7fdca4de7f60>, 'simple': 1, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 6, 'ast_type': 'AnnAssign', 'end_lineno': 5, 'end_col_offset': 20, 'src': '61:16:0', 'node_source_code': 'tes: bool = True'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 7, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 7, 'src': '61:3:0', 'node_source_code': 'tes'}
ast_struct
{'id': 'bool', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 5, 'col_offset': 9, 'first_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'last_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 9, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 13, 'src': '66:4:0', 'node_source_code': 'bool'}
ast_struct
{'value': True, 'lineno': 5, 'col_offset': 16, 'first_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 11, 'ast_type': 'NameConstant', 'end_lineno': 5, 'end_col_offset': 20, 'src': '73:4:0', 'node_source_code': 'True'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4de7fd0>, 'annotation': <_ast.Subscript object at 0x7fdca4de7c18>, 'value': <_ast.List object at 0x7fdca4de7e80>, 'simple': 1, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'last_token': Token(type=53, string=']', start=(6, 38), end=(6, 39), line='    exampleList: int128[3] = [10,11,12]\n', index=35, startpos=116, endpos=117), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 12, 'ast_type': 'AnnAssign', 'end_lineno': 6, 'end_col_offset': 39, 'src': '82:35:0', 'node_source_code': 'exampleList: int128[3] = [10,11,12]'}
ast_struct
{'id': 'exampleList', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'last_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 13, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 15, 'src': '82:11:0', 'node_source_code': 'exampleList'}
ast_struct
{'value': <_ast.Name object at 0x7fdca4de7be0>, 'slice': <_ast.Index object at 0x7fdca4de7cc0>, 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'last_token': Token(type=53, string=']', start=(6, 25), end=(6, 26), line='    exampleList: int128[3] = [10,11,12]\n', index=27, startpos=103, endpos=104), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 15, 'ast_type': 'Subscript', 'end_lineno': 6, 'end_col_offset': 26, 'src': '95:9:0', 'node_source_code': 'int128[3]'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'last_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 16, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 23, 'src': '95:6:0', 'node_source_code': 'int128'}
ast_struct
{'value': <_ast.Num object at 0x7fdca4de7c88>, 'first_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'last_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 18, 'ast_type': 'Index', 'lineno': 6, 'col_offset': 24, 'end_lineno': 6, 'end_col_offset': 25, 'src': '102:1:0', 'node_source_code': '3'}
ast_struct
{'n': 3, 'lineno': 6, 'col_offset': 24, 'first_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'last_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 19, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 25, 'src': '102:1:0', 'node_source_code': '3'}
ast_struct
{'elts': [<_ast.Num object at 0x7fdca4de7e10>, <_ast.Num object at 0x7fdca4de7d30>, <_ast.Num object at 0x7fdca4e05048>], 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 29, 'first_token': Token(type=53, string='[', start=(6, 29), end=(6, 30), line='    exampleList: int128[3] = [10,11,12]\n', index=29, startpos=107, endpos=108), 'last_token': Token(type=53, string=']', start=(6, 38), end=(6, 39), line='    exampleList: int128[3] = [10,11,12]\n', index=35, startpos=116, endpos=117), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 21, 'ast_type': 'List', 'end_lineno': 6, 'end_col_offset': 39, 'src': '107:10:0', 'node_source_code': '[10,11,12]'}
ast_struct
{'n': 10, 'lineno': 6, 'col_offset': 30, 'first_token': Token(type=2, string='10', start=(6, 30), end=(6, 32), line='    exampleList: int128[3] = [10,11,12]\n', index=30, startpos=108, endpos=110), 'last_token': Token(type=2, string='10', start=(6, 30), end=(6, 32), line='    exampleList: int128[3] = [10,11,12]\n', index=30, startpos=108, endpos=110), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 22, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 32, 'src': '108:2:0', 'node_source_code': '10'}
ast_struct
{'n': 11, 'lineno': 6, 'col_offset': 33, 'first_token': Token(type=2, string='11', start=(6, 33), end=(6, 35), line='    exampleList: int128[3] = [10,11,12]\n', index=32, startpos=111, endpos=113), 'last_token': Token(type=2, string='11', start=(6, 33), end=(6, 35), line='    exampleList: int128[3] = [10,11,12]\n', index=32, startpos=111, endpos=113), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 23, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 35, 'src': '111:2:0', 'node_source_code': '11'}
ast_struct
{'n': 12, 'lineno': 6, 'col_offset': 36, 'first_token': Token(type=2, string='12', start=(6, 36), end=(6, 38), line='    exampleList: int128[3] = [10,11,12]\n', index=34, startpos=114, endpos=116), 'last_token': Token(type=2, string='12', start=(6, 36), end=(6, 38), line='    exampleList: int128[3] = [10,11,12]\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 24, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 38, 'src': '114:2:0', 'node_source_code': '12'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e050b8>, 'annotation': <_ast.Name object at 0x7fdca4e050f0>, 'value': <_ast.Subscript object at 0x7fdca4e05128>, 'simple': 1, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'last_token': Token(type=53, string=']', start=(7, 32), end=(7, 33), line='    leng: int128 = exampleList[1]\n', index=44, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 26, 'ast_type': 'AnnAssign', 'end_lineno': 7, 'end_col_offset': 33, 'src': '122:29:0', 'node_source_code': 'leng: int128 = exampleList[1]'}
ast_struct
{'id': 'leng', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'last_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 27, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 8, 'src': '122:4:0', 'node_source_code': 'leng'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 10, 'first_token': Token(type=1, string='int128', start=(7, 10), end=(7, 16), line='    leng: int128 = exampleList[1]\n', index=39, startpos=128, endpos=134), 'last_token': Token(type=1, string='int128', start=(7, 10), end=(7, 16), line='    leng: int128 = exampleList[1]\n', index=39, startpos=128, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 29, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 16, 'src': '128:6:0', 'node_source_code': 'int128'}
ast_struct
{'value': <_ast.Name object at 0x7fdca4e05160>, 'slice': <_ast.Index object at 0x7fdca4e05198>, 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 19, 'first_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'last_token': Token(type=53, string=']', start=(7, 32), end=(7, 33), line='    leng: int128 = exampleList[1]\n', index=44, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 31, 'ast_type': 'Subscript', 'end_lineno': 7, 'end_col_offset': 33, 'src': '137:14:0', 'node_source_code': 'exampleList[1]'}
ast_struct
{'id': 'exampleList', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 19, 'first_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'last_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 32, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 30, 'src': '137:11:0', 'node_source_code': 'exampleList'}
ast_struct
{'value': <_ast.Num object at 0x7fdca4e051d0>, 'first_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'last_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 34, 'ast_type': 'Index', 'lineno': 7, 'col_offset': 31, 'end_lineno': 7, 'end_col_offset': 32, 'src': '149:1:0', 'node_source_code': '1'}
ast_struct
{'n': 1, 'lineno': 7, 'col_offset': 31, 'first_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'last_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 35, 'ast_type': 'Int', 'end_lineno': 7, 'end_col_offset': 32, 'src': '149:1:0', 'node_source_code': '1'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e05240>, 'annotation': <_ast.Name object at 0x7fdca4e05278>, 'value': <_ast.BinOp object at 0x7fdca4e052b0>, 'simple': 1, 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 37, 'ast_type': 'AnnAssign', 'end_lineno': 8, 'end_col_offset': 19, 'src': '156:15:0', 'node_source_code': 'x: int128 = 5+2'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'last_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 38, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 5, 'src': '156:1:0', 'node_source_code': 'x'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 8, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(8, 7), end=(8, 13), line='    x: int128 = 5+2\n', index=48, startpos=159, endpos=165), 'last_token': Token(type=1, string='int128', start=(8, 7), end=(8, 13), line='    x: int128 = 5+2\n', index=48, startpos=159, endpos=165), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 40, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 13, 'src': '159:6:0', 'node_source_code': 'int128'}
ast_struct
{'left': <_ast.Num object at 0x7fdca4e052e8>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'right': <_ast.Num object at 0x7fdca4e05320>, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 42, 'ast_type': 'BinOp', 'end_lineno': 8, 'end_col_offset': 19, 'src': '168:3:0', 'node_source_code': '5+2'}
ast_struct
{'n': 5, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'last_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 43, 'ast_type': 'Int', 'end_lineno': 8, 'end_col_offset': 17, 'src': '168:1:0', 'node_source_code': '5'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 8, 'col_offset': 18, 'first_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 45, 'ast_type': 'Int', 'end_lineno': 8, 'end_col_offset': 19, 'src': '170:1:0', 'node_source_code': '2'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e05390>, 'annotation': <_ast.Name object at 0x7fdca4e053c8>, 'value': <_ast.Num object at 0x7fdca4e05400>, 'simple': 1, 'lineno': 9, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'last_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 46, 'ast_type': 'AnnAssign', 'end_lineno': 9, 'end_col_offset': 18, 'src': '176:14:0', 'node_source_code': 'z: int128 = 10'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 9, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'last_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 47, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 5, 'src': '176:1:0', 'node_source_code': 'z'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 9, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(9, 7), end=(9, 13), line='    z: int128 = 10\n', index=56, startpos=179, endpos=185), 'last_token': Token(type=1, string='int128', start=(9, 7), end=(9, 13), line='    z: int128 = 10\n', index=56, startpos=179, endpos=185), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 49, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 13, 'src': '179:6:0', 'node_source_code': 'int128'}
ast_struct
{'n': 10, 'lineno': 9, 'col_offset': 16, 'first_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'last_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 51, 'ast_type': 'Int', 'end_lineno': 9, 'end_col_offset': 18, 'src': '188:2:0', 'node_source_code': '10'}
ast_struct
{'test': <_ast.Compare object at 0x7fdca4e05470>, 'body': [<_ast.Assign object at 0x7fdca4e05588>], 'orelse': [], 'lineno': 10, 'col_offset': 4, 'first_token': Token(type=1, string='if', start=(10, 4), end=(10, 6), line='    if (z > x + y):\n', index=60, startpos=195, endpos=197), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 52, 'ast_type': 'If', 'end_lineno': 11, 'end_col_offset': 14, 'src': '195:30:0', 'node_source_code': 'if (z > x + y):\n     z = x - y'}
ast_struct
{'left': <_ast.Name object at 0x7fdca4e054a8>, 'ops': [<_ast.Gt object at 0x7fdca616e3c8>], 'comparators': [<_ast.BinOp object at 0x7fdca4e054e0>], 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 53, 'ast_type': 'Compare', 'end_lineno': 10, 'end_col_offset': 17, 'src': '199:9:0', 'node_source_code': 'z > x + y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'last_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 54, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 9, 'src': '199:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 56, 'ast_type': 'Gt', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'left': <_ast.Name object at 0x7fdca4e05518>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'right': <_ast.Name object at 0x7fdca4e05550>, 'lineno': 10, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 57, 'ast_type': 'BinOp', 'end_lineno': 10, 'end_col_offset': 17, 'src': '203:5:0', 'node_source_code': 'x + y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'last_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 58, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 13, 'src': '203:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 16, 'first_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 61, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 17, 'src': '207:1:0', 'node_source_code': 'y'}
ast_struct
{'targets': [<_ast.Name object at 0x7fdca4e055c0>], 'value': <_ast.BinOp object at 0x7fdca4e055f8>, 'lineno': 11, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 63, 'ast_type': 'Assign', 'end_lineno': 11, 'end_col_offset': 14, 'src': '216:9:0', 'node_source_code': 'z = x - y'}
ast_struct
{'left': <_ast.Name object at 0x7fdca4e05630>, 'op': <_ast.Sub object at 0x7fdca6168be0>, 'right': <_ast.Name object at 0x7fdca4e05668>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 66, 'ast_type': 'BinOp', 'end_lineno': 11, 'end_col_offset': 14, 'src': '220:5:0', 'node_source_code': 'x - y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'last_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 67, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 10, 'src': '220:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 69, 'ast_type': 'Sub', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 11, 'col_offset': 13, 'first_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 70, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 14, 'src': '224:1:0', 'node_source_code': 'y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 11, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'last_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 64, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 6, 'src': '216:1:0', 'node_source_code': 'z'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e056d8>, 'iter': <_ast.Call object at 0x7fdca4e05710>, 'body': [<_ast.AugAssign object at 0x7fdca4e057f0>], 'orelse': [], 'lineno': 12, 'col_offset': 4, 'first_token': Token(type=1, string='for', start=(12, 4), end=(12, 7), line='    for i in range(5,10):\n', index=78, startpos=230, endpos=233), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 72, 'ast_type': 'For', 'end_lineno': 13, 'end_col_offset': 10, 'src': '230:32:0', 'node_source_code': 'for i in range(5,10):\n      x+=z'}
ast_struct
{'id': 'i', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 12, 'col_offset': 8, 'first_token': Token(type=1, string='i', start=(12, 8), end=(12, 9), line='    for i in range(5,10):\n', index=79, startpos=234, endpos=235), 'last_token': Token(type=1, string='i', start=(12, 8), end=(12, 9), line='    for i in range(5,10):\n', index=79, startpos=234, endpos=235), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 73, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 9, 'src': '234:1:0', 'node_source_code': 'i'}
ast_struct
{'func': <_ast.Name object at 0x7fdca4e05748>, 'args': [<_ast.Num object at 0x7fdca4e05780>, <_ast.Num object at 0x7fdca4e057b8>], 'keywords': [], 'lineno': 12, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'last_token': Token(type=53, string=')', start=(12, 23), end=(12, 24), line='    for i in range(5,10):\n', index=86, startpos=249, endpos=250), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 75, 'ast_type': 'Call', 'end_lineno': 12, 'end_col_offset': 24, 'src': '239:11:0', 'node_source_code': 'range(5,10)'}
ast_struct
{'id': 'range', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 12, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'last_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 76, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 18, 'src': '239:5:0', 'node_source_code': 'range'}
ast_struct
{'n': 5, 'lineno': 12, 'col_offset': 19, 'first_token': Token(type=2, string='5', start=(12, 19), end=(12, 20), line='    for i in range(5,10):\n', index=83, startpos=245, endpos=246), 'last_token': Token(type=2, string='5', start=(12, 19), end=(12, 20), line='    for i in range(5,10):\n', index=83, startpos=245, endpos=246), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 78, 'ast_type': 'Int', 'end_lineno': 12, 'end_col_offset': 20, 'src': '245:1:0', 'node_source_code': '5'}
ast_struct
{'n': 10, 'lineno': 12, 'col_offset': 21, 'first_token': Token(type=2, string='10', start=(12, 21), end=(12, 23), line='    for i in range(5,10):\n', index=85, startpos=247, endpos=249), 'last_token': Token(type=2, string='10', start=(12, 21), end=(12, 23), line='    for i in range(5,10):\n', index=85, startpos=247, endpos=249), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 79, 'ast_type': 'Int', 'end_lineno': 12, 'end_col_offset': 23, 'src': '247:2:0', 'node_source_code': '10'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e05828>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'value': <_ast.Name object at 0x7fdca4e05860>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 80, 'ast_type': 'AugAssign', 'end_lineno': 13, 'end_col_offset': 10, 'src': '258:4:0', 'node_source_code': 'x+=z'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'last_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 81, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 7, 'src': '258:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 13, 'col_offset': 9, 'first_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 84, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 10, 'src': '261:1:0', 'node_source_code': 'z'}
ast_struct
{'test': <_ast.Name object at 0x7fdca4e058d0>, 'body': [<_ast.AugAssign object at 0x7fdca4e05908>], 'orelse': [], 'lineno': 14, 'col_offset': 4, 'first_token': Token(type=1, string='while', start=(14, 4), end=(14, 9), line='    while(tes):\n', index=95, startpos=267, endpos=272), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 86, 'ast_type': 'While', 'end_lineno': 15, 'end_col_offset': 10, 'src': '267:22:0', 'node_source_code': 'while(tes):\n      z+=1'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 14, 'col_offset': 10, 'first_token': Token(type=1, string='tes', start=(14, 10), end=(14, 13), line='    while(tes):\n', index=97, startpos=273, endpos=276), 'last_token': Token(type=1, string='tes', start=(14, 10), end=(14, 13), line='    while(tes):\n', index=97, startpos=273, endpos=276), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 87, 'ast_type': 'Name', 'end_lineno': 14, 'end_col_offset': 13, 'src': '273:3:0', 'node_source_code': 'tes'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4e05940>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'value': <_ast.Num object at 0x7fdca4e05978>, 'lineno': 15, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 89, 'ast_type': 'AugAssign', 'end_lineno': 15, 'end_col_offset': 10, 'src': '285:4:0', 'node_source_code': 'z+=1'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 15, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'last_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 90, 'ast_type': 'Name', 'end_lineno': 15, 'end_col_offset': 7, 'src': '285:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 1, 'lineno': 15, 'col_offset': 9, 'first_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 93, 'ast_type': 'Int', 'end_lineno': 15, 'end_col_offset': 10, 'src': '288:1:0', 'node_source_code': '1'}
ast_struct
{'id': 'public', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 3, 'col_offset': 1, 'first_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'last_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 94, 'ast_type': 'Name', 'end_lineno': 3, 'end_col_offset': 7, 'src': '24:6:0', 'node_source_code': 'public'}
parse reformatted code
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 95, 'ast_type': 'Load', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
annotate
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 95, 'ast_type': 'Load', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'body': [<_ast.FunctionDef object at 0x7fdca4df1198>], 'first_token': Token(type=57, string='#numb: public(int128)', start=(1, 0), end=(1, 21), line='#numb: public(int128)\n', index=0, startpos=0, endpos=21), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 0, 'ast_type': 'Module', 'lineno': 1, 'col_offset': 0, 'end_lineno': 15, 'end_col_offset': 10, 'src': '0:289:0', 'node_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'name': 'calculate', 'args': <_ast.arguments object at 0x7fdca4df1278>, 'body': [<_ast.AnnAssign object at 0x7fdca4b873c8>, <_ast.AnnAssign object at 0x7fdca4b874a8>, <_ast.AnnAssign object at 0x7fdca4b876d8>, <_ast.AnnAssign object at 0x7fdca4b87860>, <_ast.AnnAssign object at 0x7fdca4b87198>, <_ast.If object at 0x7fdca4b879e8>, <_ast.For object at 0x7fdca4b87c50>, <_ast.While object at 0x7fdca4b87e48>], 'decorator_list': [<_ast.Name object at 0x7fdca4b87f60>], 'returns': None, 'lineno': 3, 'col_offset': 0, 'first_token': Token(type=53, string='@', start=(3, 0), end=(3, 1), line='@public\n', index=3, startpos=23, endpos=24), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 1, 'ast_type': 'FunctionDef', 'end_lineno': 15, 'end_col_offset': 10, 'src': '23:266:0', 'node_source_code': '@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'args': [<_ast.arg object at 0x7fdca4b872e8>], 'vararg': None, 'kwonlyargs': [], 'kw_defaults': [], 'kwarg': None, 'defaults': [], 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 2, 'ast_type': 'arguments', 'lineno': 4, 'col_offset': 14, 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'arg': 'y', 'annotation': <_ast.Name object at 0x7fdca4b87390>, 'lineno': 4, 'col_offset': 14, 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 3, 'ast_type': 'arg', 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 4, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 4, 'ast_type': 'Name', 'end_lineno': 4, 'end_col_offset': 23, 'src': '48:6:0', 'node_source_code': 'int128'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87400>, 'annotation': <_ast.Name object at 0x7fdca4b87438>, 'value': <_ast.NameConstant object at 0x7fdca4b87470>, 'simple': 1, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 6, 'ast_type': 'AnnAssign', 'end_lineno': 5, 'end_col_offset': 20, 'src': '61:16:0', 'node_source_code': 'tes: bool = True'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 7, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 7, 'src': '61:3:0', 'node_source_code': 'tes'}
ast_struct
{'id': 'bool', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 5, 'col_offset': 9, 'first_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'last_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 9, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 13, 'src': '66:4:0', 'node_source_code': 'bool'}
ast_struct
{'value': True, 'lineno': 5, 'col_offset': 16, 'first_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 11, 'ast_type': 'NameConstant', 'end_lineno': 5, 'end_col_offset': 20, 'src': '73:4:0', 'node_source_code': 'True'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b874e0>, 'annotation': <_ast.Subscript object at 0x7fdca4b87518>, 'value': <_ast.List object at 0x7fdca4b875f8>, 'simple': 1, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'last_token': Token(type=53, string=']', start=(6, 38), end=(6, 39), line='    exampleList: int128[3] = [10,11,12]\n', index=35, startpos=116, endpos=117), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 12, 'ast_type': 'AnnAssign', 'end_lineno': 6, 'end_col_offset': 39, 'src': '82:35:0', 'node_source_code': 'exampleList: int128[3] = [10,11,12]'}
ast_struct
{'id': 'exampleList', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'last_token': Token(type=1, string='exampleList', start=(6, 4), end=(6, 15), line='    exampleList: int128[3] = [10,11,12]\n', index=22, startpos=82, endpos=93), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 13, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 15, 'src': '82:11:0', 'node_source_code': 'exampleList'}
ast_struct
{'value': <_ast.Name object at 0x7fdca4b87550>, 'slice': <_ast.Index object at 0x7fdca4b87588>, 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'last_token': Token(type=53, string=']', start=(6, 25), end=(6, 26), line='    exampleList: int128[3] = [10,11,12]\n', index=27, startpos=103, endpos=104), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 15, 'ast_type': 'Subscript', 'end_lineno': 6, 'end_col_offset': 26, 'src': '95:9:0', 'node_source_code': 'int128[3]'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'last_token': Token(type=1, string='int128', start=(6, 17), end=(6, 23), line='    exampleList: int128[3] = [10,11,12]\n', index=24, startpos=95, endpos=101), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 16, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 23, 'src': '95:6:0', 'node_source_code': 'int128'}
ast_struct
{'value': <_ast.Num object at 0x7fdca4b875c0>, 'first_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'last_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 18, 'ast_type': 'Index', 'lineno': 6, 'col_offset': 24, 'end_lineno': 6, 'end_col_offset': 25, 'src': '102:1:0', 'node_source_code': '3'}
ast_struct
{'n': 3, 'lineno': 6, 'col_offset': 24, 'first_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'last_token': Token(type=2, string='3', start=(6, 24), end=(6, 25), line='    exampleList: int128[3] = [10,11,12]\n', index=26, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 19, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 25, 'src': '102:1:0', 'node_source_code': '3'}
ast_struct
{'elts': [<_ast.Num object at 0x7fdca4b87630>, <_ast.Num object at 0x7fdca4b87668>, <_ast.Num object at 0x7fdca4b876a0>], 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 6, 'col_offset': 29, 'first_token': Token(type=53, string='[', start=(6, 29), end=(6, 30), line='    exampleList: int128[3] = [10,11,12]\n', index=29, startpos=107, endpos=108), 'last_token': Token(type=53, string=']', start=(6, 38), end=(6, 39), line='    exampleList: int128[3] = [10,11,12]\n', index=35, startpos=116, endpos=117), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 21, 'ast_type': 'List', 'end_lineno': 6, 'end_col_offset': 39, 'src': '107:10:0', 'node_source_code': '[10,11,12]'}
ast_struct
{'n': 10, 'lineno': 6, 'col_offset': 30, 'first_token': Token(type=2, string='10', start=(6, 30), end=(6, 32), line='    exampleList: int128[3] = [10,11,12]\n', index=30, startpos=108, endpos=110), 'last_token': Token(type=2, string='10', start=(6, 30), end=(6, 32), line='    exampleList: int128[3] = [10,11,12]\n', index=30, startpos=108, endpos=110), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 22, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 32, 'src': '108:2:0', 'node_source_code': '10'}
ast_struct
{'n': 11, 'lineno': 6, 'col_offset': 33, 'first_token': Token(type=2, string='11', start=(6, 33), end=(6, 35), line='    exampleList: int128[3] = [10,11,12]\n', index=32, startpos=111, endpos=113), 'last_token': Token(type=2, string='11', start=(6, 33), end=(6, 35), line='    exampleList: int128[3] = [10,11,12]\n', index=32, startpos=111, endpos=113), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 23, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 35, 'src': '111:2:0', 'node_source_code': '11'}
ast_struct
{'n': 12, 'lineno': 6, 'col_offset': 36, 'first_token': Token(type=2, string='12', start=(6, 36), end=(6, 38), line='    exampleList: int128[3] = [10,11,12]\n', index=34, startpos=114, endpos=116), 'last_token': Token(type=2, string='12', start=(6, 36), end=(6, 38), line='    exampleList: int128[3] = [10,11,12]\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 24, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 38, 'src': '114:2:0', 'node_source_code': '12'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87710>, 'annotation': <_ast.Name object at 0x7fdca4b87748>, 'value': <_ast.Subscript object at 0x7fdca4b87780>, 'simple': 1, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'last_token': Token(type=53, string=']', start=(7, 32), end=(7, 33), line='    leng: int128 = exampleList[1]\n', index=44, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 26, 'ast_type': 'AnnAssign', 'end_lineno': 7, 'end_col_offset': 33, 'src': '122:29:0', 'node_source_code': 'leng: int128 = exampleList[1]'}
ast_struct
{'id': 'leng', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'last_token': Token(type=1, string='leng', start=(7, 4), end=(7, 8), line='    leng: int128 = exampleList[1]\n', index=37, startpos=122, endpos=126), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 27, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 8, 'src': '122:4:0', 'node_source_code': 'leng'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 10, 'first_token': Token(type=1, string='int128', start=(7, 10), end=(7, 16), line='    leng: int128 = exampleList[1]\n', index=39, startpos=128, endpos=134), 'last_token': Token(type=1, string='int128', start=(7, 10), end=(7, 16), line='    leng: int128 = exampleList[1]\n', index=39, startpos=128, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 29, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 16, 'src': '128:6:0', 'node_source_code': 'int128'}
ast_struct
{'value': <_ast.Name object at 0x7fdca4b877b8>, 'slice': <_ast.Index object at 0x7fdca4b877f0>, 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 19, 'first_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'last_token': Token(type=53, string=']', start=(7, 32), end=(7, 33), line='    leng: int128 = exampleList[1]\n', index=44, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 31, 'ast_type': 'Subscript', 'end_lineno': 7, 'end_col_offset': 33, 'src': '137:14:0', 'node_source_code': 'exampleList[1]'}
ast_struct
{'id': 'exampleList', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 7, 'col_offset': 19, 'first_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'last_token': Token(type=1, string='exampleList', start=(7, 19), end=(7, 30), line='    leng: int128 = exampleList[1]\n', index=41, startpos=137, endpos=148), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 32, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 30, 'src': '137:11:0', 'node_source_code': 'exampleList'}
ast_struct
{'value': <_ast.Num object at 0x7fdca4b87828>, 'first_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'last_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 34, 'ast_type': 'Index', 'lineno': 7, 'col_offset': 31, 'end_lineno': 7, 'end_col_offset': 32, 'src': '149:1:0', 'node_source_code': '1'}
ast_struct
{'n': 1, 'lineno': 7, 'col_offset': 31, 'first_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'last_token': Token(type=2, string='1', start=(7, 31), end=(7, 32), line='    leng: int128 = exampleList[1]\n', index=43, startpos=149, endpos=150), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 35, 'ast_type': 'Int', 'end_lineno': 7, 'end_col_offset': 32, 'src': '149:1:0', 'node_source_code': '1'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87898>, 'annotation': <_ast.Name object at 0x7fdca4b878d0>, 'value': <_ast.BinOp object at 0x7fdca4b87908>, 'simple': 1, 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 37, 'ast_type': 'AnnAssign', 'end_lineno': 8, 'end_col_offset': 19, 'src': '156:15:0', 'node_source_code': 'x: int128 = 5+2'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'last_token': Token(type=1, string='x', start=(8, 4), end=(8, 5), line='    x: int128 = 5+2\n', index=46, startpos=156, endpos=157), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 38, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 5, 'src': '156:1:0', 'node_source_code': 'x'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 8, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(8, 7), end=(8, 13), line='    x: int128 = 5+2\n', index=48, startpos=159, endpos=165), 'last_token': Token(type=1, string='int128', start=(8, 7), end=(8, 13), line='    x: int128 = 5+2\n', index=48, startpos=159, endpos=165), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 40, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 13, 'src': '159:6:0', 'node_source_code': 'int128'}
ast_struct
{'left': <_ast.Num object at 0x7fdca4b87940>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'right': <_ast.Num object at 0x7fdca4b872b0>, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 42, 'ast_type': 'BinOp', 'end_lineno': 8, 'end_col_offset': 19, 'src': '168:3:0', 'node_source_code': '5+2'}
ast_struct
{'n': 5, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'last_token': Token(type=2, string='5', start=(8, 16), end=(8, 17), line='    x: int128 = 5+2\n', index=50, startpos=168, endpos=169), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 43, 'ast_type': 'Int', 'end_lineno': 8, 'end_col_offset': 17, 'src': '168:1:0', 'node_source_code': '5'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 8, 'col_offset': 18, 'first_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'last_token': Token(type=2, string='2', start=(8, 18), end=(8, 19), line='    x: int128 = 5+2\n', index=52, startpos=170, endpos=171), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 45, 'ast_type': 'Int', 'end_lineno': 8, 'end_col_offset': 19, 'src': '170:1:0', 'node_source_code': '2'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87048>, 'annotation': <_ast.Name object at 0x7fdca4b87978>, 'value': <_ast.Num object at 0x7fdca4b879b0>, 'simple': 1, 'lineno': 9, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'last_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 46, 'ast_type': 'AnnAssign', 'end_lineno': 9, 'end_col_offset': 18, 'src': '176:14:0', 'node_source_code': 'z: int128 = 10'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 9, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'last_token': Token(type=1, string='z', start=(9, 4), end=(9, 5), line='    z: int128 = 10\n', index=54, startpos=176, endpos=177), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 47, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 5, 'src': '176:1:0', 'node_source_code': 'z'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 9, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(9, 7), end=(9, 13), line='    z: int128 = 10\n', index=56, startpos=179, endpos=185), 'last_token': Token(type=1, string='int128', start=(9, 7), end=(9, 13), line='    z: int128 = 10\n', index=56, startpos=179, endpos=185), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 49, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 13, 'src': '179:6:0', 'node_source_code': 'int128'}
ast_struct
{'n': 10, 'lineno': 9, 'col_offset': 16, 'first_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'last_token': Token(type=2, string='10', start=(9, 16), end=(9, 18), line='    z: int128 = 10\n', index=58, startpos=188, endpos=190), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 51, 'ast_type': 'Int', 'end_lineno': 9, 'end_col_offset': 18, 'src': '188:2:0', 'node_source_code': '10'}
ast_struct
{'test': <_ast.Compare object at 0x7fdca4b87a20>, 'body': [<_ast.Assign object at 0x7fdca4b87b38>], 'orelse': [], 'lineno': 10, 'col_offset': 4, 'first_token': Token(type=1, string='if', start=(10, 4), end=(10, 6), line='    if (z > x + y):\n', index=60, startpos=195, endpos=197), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 52, 'ast_type': 'If', 'end_lineno': 11, 'end_col_offset': 14, 'src': '195:30:0', 'node_source_code': 'if (z > x + y):\n     z = x - y'}
ast_struct
{'left': <_ast.Name object at 0x7fdca4b87a58>, 'ops': [<_ast.Gt object at 0x7fdca616e3c8>], 'comparators': [<_ast.BinOp object at 0x7fdca4b87a90>], 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 53, 'ast_type': 'Compare', 'end_lineno': 10, 'end_col_offset': 17, 'src': '199:9:0', 'node_source_code': 'z > x + y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'last_token': Token(type=1, string='z', start=(10, 8), end=(10, 9), line='    if (z > x + y):\n', index=62, startpos=199, endpos=200), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 54, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 9, 'src': '199:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 56, 'ast_type': 'Gt', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'left': <_ast.Name object at 0x7fdca4b87ac8>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'right': <_ast.Name object at 0x7fdca4b87b00>, 'lineno': 10, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 57, 'ast_type': 'BinOp', 'end_lineno': 10, 'end_col_offset': 17, 'src': '203:5:0', 'node_source_code': 'x + y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'last_token': Token(type=1, string='x', start=(10, 12), end=(10, 13), line='    if (z > x + y):\n', index=64, startpos=203, endpos=204), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 58, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 13, 'src': '203:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 10, 'col_offset': 16, 'first_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'last_token': Token(type=1, string='y', start=(10, 16), end=(10, 17), line='    if (z > x + y):\n', index=66, startpos=207, endpos=208), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 61, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 17, 'src': '207:1:0', 'node_source_code': 'y'}
ast_struct
{'targets': [<_ast.Name object at 0x7fdca4b87b70>], 'value': <_ast.BinOp object at 0x7fdca4b87ba8>, 'lineno': 11, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 63, 'ast_type': 'Assign', 'end_lineno': 11, 'end_col_offset': 14, 'src': '216:9:0', 'node_source_code': 'z = x - y'}
ast_struct
{'left': <_ast.Name object at 0x7fdca4b87be0>, 'op': <_ast.Sub object at 0x7fdca6168be0>, 'right': <_ast.Name object at 0x7fdca4b87c18>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 66, 'ast_type': 'BinOp', 'end_lineno': 11, 'end_col_offset': 14, 'src': '220:5:0', 'node_source_code': 'x - y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'last_token': Token(type=1, string='x', start=(11, 9), end=(11, 10), line='     z = x - y\n', index=73, startpos=220, endpos=221), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 67, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 10, 'src': '220:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 69, 'ast_type': 'Sub', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 11, 'col_offset': 13, 'first_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'last_token': Token(type=1, string='y', start=(11, 13), end=(11, 14), line='     z = x - y\n', index=75, startpos=224, endpos=225), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 70, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 14, 'src': '224:1:0', 'node_source_code': 'y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 11, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'last_token': Token(type=1, string='z', start=(11, 5), end=(11, 6), line='     z = x - y\n', index=71, startpos=216, endpos=217), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 64, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 6, 'src': '216:1:0', 'node_source_code': 'z'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87c88>, 'iter': <_ast.Call object at 0x7fdca4b87cc0>, 'body': [<_ast.AugAssign object at 0x7fdca4b87da0>], 'orelse': [], 'lineno': 12, 'col_offset': 4, 'first_token': Token(type=1, string='for', start=(12, 4), end=(12, 7), line='    for i in range(5,10):\n', index=78, startpos=230, endpos=233), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 72, 'ast_type': 'For', 'end_lineno': 13, 'end_col_offset': 10, 'src': '230:32:0', 'node_source_code': 'for i in range(5,10):\n      x+=z'}
ast_struct
{'id': 'i', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 12, 'col_offset': 8, 'first_token': Token(type=1, string='i', start=(12, 8), end=(12, 9), line='    for i in range(5,10):\n', index=79, startpos=234, endpos=235), 'last_token': Token(type=1, string='i', start=(12, 8), end=(12, 9), line='    for i in range(5,10):\n', index=79, startpos=234, endpos=235), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 73, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 9, 'src': '234:1:0', 'node_source_code': 'i'}
ast_struct
{'func': <_ast.Name object at 0x7fdca4b87cf8>, 'args': [<_ast.Num object at 0x7fdca4b87d30>, <_ast.Num object at 0x7fdca4b87d68>], 'keywords': [], 'lineno': 12, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'last_token': Token(type=53, string=')', start=(12, 23), end=(12, 24), line='    for i in range(5,10):\n', index=86, startpos=249, endpos=250), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 75, 'ast_type': 'Call', 'end_lineno': 12, 'end_col_offset': 24, 'src': '239:11:0', 'node_source_code': 'range(5,10)'}
ast_struct
{'id': 'range', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 12, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'last_token': Token(type=1, string='range', start=(12, 13), end=(12, 18), line='    for i in range(5,10):\n', index=81, startpos=239, endpos=244), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 76, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 18, 'src': '239:5:0', 'node_source_code': 'range'}
ast_struct
{'n': 5, 'lineno': 12, 'col_offset': 19, 'first_token': Token(type=2, string='5', start=(12, 19), end=(12, 20), line='    for i in range(5,10):\n', index=83, startpos=245, endpos=246), 'last_token': Token(type=2, string='5', start=(12, 19), end=(12, 20), line='    for i in range(5,10):\n', index=83, startpos=245, endpos=246), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 78, 'ast_type': 'Int', 'end_lineno': 12, 'end_col_offset': 20, 'src': '245:1:0', 'node_source_code': '5'}
ast_struct
{'n': 10, 'lineno': 12, 'col_offset': 21, 'first_token': Token(type=2, string='10', start=(12, 21), end=(12, 23), line='    for i in range(5,10):\n', index=85, startpos=247, endpos=249), 'last_token': Token(type=2, string='10', start=(12, 21), end=(12, 23), line='    for i in range(5,10):\n', index=85, startpos=247, endpos=249), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 79, 'ast_type': 'Int', 'end_lineno': 12, 'end_col_offset': 23, 'src': '247:2:0', 'node_source_code': '10'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87dd8>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'value': <_ast.Name object at 0x7fdca4b87e10>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 80, 'ast_type': 'AugAssign', 'end_lineno': 13, 'end_col_offset': 10, 'src': '258:4:0', 'node_source_code': 'x+=z'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'last_token': Token(type=1, string='x', start=(13, 6), end=(13, 7), line='      x+=z\n', index=90, startpos=258, endpos=259), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 81, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 7, 'src': '258:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 13, 'col_offset': 9, 'first_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'last_token': Token(type=1, string='z', start=(13, 9), end=(13, 10), line='      x+=z\n', index=92, startpos=261, endpos=262), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 84, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 10, 'src': '261:1:0', 'node_source_code': 'z'}
ast_struct
{'test': <_ast.Name object at 0x7fdca4b87e80>, 'body': [<_ast.AugAssign object at 0x7fdca4b87eb8>], 'orelse': [], 'lineno': 14, 'col_offset': 4, 'first_token': Token(type=1, string='while', start=(14, 4), end=(14, 9), line='    while(tes):\n', index=95, startpos=267, endpos=272), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 86, 'ast_type': 'While', 'end_lineno': 15, 'end_col_offset': 10, 'src': '267:22:0', 'node_source_code': 'while(tes):\n      z+=1'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 14, 'col_offset': 10, 'first_token': Token(type=1, string='tes', start=(14, 10), end=(14, 13), line='    while(tes):\n', index=97, startpos=273, endpos=276), 'last_token': Token(type=1, string='tes', start=(14, 10), end=(14, 13), line='    while(tes):\n', index=97, startpos=273, endpos=276), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 87, 'ast_type': 'Name', 'end_lineno': 14, 'end_col_offset': 13, 'src': '273:3:0', 'node_source_code': 'tes'}
ast_struct
{'target': <_ast.Name object at 0x7fdca4b87ef0>, 'op': <_ast.Add object at 0x7fdca6168ac8>, 'value': <_ast.Num object at 0x7fdca4b87f28>, 'lineno': 15, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 89, 'ast_type': 'AugAssign', 'end_lineno': 15, 'end_col_offset': 10, 'src': '285:4:0', 'node_source_code': 'z+=1'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fdca6163cc0>, 'lineno': 15, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'last_token': Token(type=1, string='z', start=(15, 6), end=(15, 7), line='      z+=1\n', index=102, startpos=285, endpos=286), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 90, 'ast_type': 'Name', 'end_lineno': 15, 'end_col_offset': 7, 'src': '285:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 92, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 1, 'lineno': 15, 'col_offset': 9, 'first_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'last_token': Token(type=2, string='1', start=(15, 9), end=(15, 10), line='      z+=1\n', index=104, startpos=288, endpos=289), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 93, 'ast_type': 'Int', 'end_lineno': 15, 'end_col_offset': 10, 'src': '288:1:0', 'node_source_code': '1'}
ast_struct
{'id': 'public', 'ctx': <_ast.Load object at 0x7fdca6163ba8>, 'lineno': 3, 'col_offset': 1, 'first_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'last_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    exampleList: int128[3] = [10,11,12]\n    leng: int128 = exampleList[1]\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x - y\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 94, 'ast_type': 'Name', 'end_lineno': 3, 'end_col_offset': 7, 'src': '24:6:0', 'node_source_code': 'public'}
vyper module
['__annotations__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '_children', '_depth', '_only_empty_fields', '_parent', '_translated_fields', 'ast_type', 'body', 'col_offset', 'description', 'doc_string', 'end_col_offset', 'end_lineno', 'evaluate', 'from_node', 'full_source_code', 'get', 'get_ancestor', 'get_children', 'get_descendants', 'get_fields', 'lineno', 'name', 'node_id', 'node_source_code', 'replace_in_tree', 'src', 'to_dict', 'validate']
vyper module
['__annotations__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__slots__', '__str__', '__subclasshook__', '_children', '_depth', '_only_empty_fields', '_parent', '_translated_fields', 'ast_type', 'body', 'col_offset', 'description', 'doc_string', 'end_col_offset', 'end_lineno', 'evaluate', 'from_node', 'full_source_code', 'get', 'get_ancestor', 'get_children', 'get_descendants', 'get_fields', 'lineno', 'name', 'node_id', 'node_source_code', 'replace_in_tree', 'src', 'to_dict', 'validate']
pos,typ,getpos(self.stmt)
320
bool
(5, 4, 5, 20)
variable_loc
320
pos,typ,getpos(self.stmt)
352
int128[3]
(6, 4, 6, 39)
variable_loc
352
pos,typ,getpos(self.stmt)
448
int128
(7, 4, 7, 33)
variable_loc
448
pos,typ,getpos(self.stmt)
480
int128
(8, 4, 8, 19)
variable_loc
480
pos,typ,getpos(self.stmt)
512
int128
(9, 4, 9, 18)
variable_loc
512
parse for
vyper.ast.nodes.Name:
     11      z = x - y
---> 12     for i in range(5,10):
----------------^
     13       x+=z
parse_while
lll_runtime
[seq,
  [if, [lt, calldatasize, 4], [goto, fallback]],
  [mstore, 28, [calldataload, 0]],
  [mstore, 32, 1461501637330902918203684832716283019655932542976],
  [mstore, 64, 170141183460469231731687303715884105727],
  [mstore, 96, -170141183460469231731687303715884105728],
  [mstore, 128, 1701411834604692317316873037158841057270000000000],
  [mstore, 160, -1701411834604692317316873037158841057280000000000],
  # Line 3
  [if,
    [eq, [mload, 0], 794883580 <calculate(int128)>],
    [seq,
      pass,
      pass,
      [assert, [iszero, callvalue]],
      /* checking int128 input */ 
      [clamp,
        [mload, 96],
        [calldataload, 4],
        [mload, 64]],
      [mstore, 320, 1],
      [with,
        _L,
        352,
        [seq,
          [mstore, _L, 10],
          [mstore, [add, 32, _L], 11],
          [mstore, [add, 64, _L], 12]]],
      [mstore, 448, [mload, 384 <32+exampleList>]],
      [mstore, 480, 7],
      [mstore, 512, 10],
      # Line 10
      [if,
        [sgt,
          [mload, 512 <z>],
          [with,
            l,
            [mload, 480 <x>],
            [with,
              r,
              [calldataload, 4 <y>],
              [seq, [clamp, [mload, 96], [add, l, r], [mload, 64]]]]]],
        # Line 11
        [seq,
          [mstore,
            512 <z>,
            [with,
              l,
              [mload, 480 <x>],
              [with,
                r,
                [calldataload, 4 <y>],
                [seq, [clamp, [mload, 96], [sub, l, r], [mload, 64]]]]]],
          pass]],
      # Line 12
      [repeat,
        544,
        5,
        5,
        [seq,
          [with,
            _mloc,
            480 <x>,
            [mstore,
              _mloc,
              [with,
                l,
                [mload, _mloc],
                [with,
                  r,
                  [mload, 512 <z>],
                  [seq, [clamp, [mload, 96], [add, l, r], [mload, 64]]]]]]],
          pass]],
      # Line 3
      None,
      pass,
      stop]],
  [seq_unchecked, [label, fallback], /* Default function */ [revert, 0, 0]]]
lll_nodes
[seq,
  [return,
    0,
    [lll,
      [seq,
        [if, [lt, calldatasize, 4], [goto, fallback]],
        [mstore, 28, [calldataload, 0]],
        [mstore, 32, 1461501637330902918203684832716283019655932542976],
        [mstore, 64, 170141183460469231731687303715884105727],
        [mstore, 96, -170141183460469231731687303715884105728],
        [mstore, 128, 1701411834604692317316873037158841057270000000000],
        [mstore, 160, -1701411834604692317316873037158841057280000000000],
        # Line 3
        [if,
          [eq, [mload, 0], 794883580 <calculate(int128)>],
          [seq,
            pass,
            pass,
            [assert, [iszero, callvalue]],
            /* checking int128 input */ 
            [clamp,
              [mload, 96],
              [calldataload, 4],
              [mload, 64]],
            [mstore, 320, 1],
            [with,
              _L,
              352,
              [seq,
                [mstore, _L, 10],
                [mstore, [add, 32, _L], 11],
                [mstore, [add, 64, _L], 12]]],
            [mstore, 448, [mload, 384 <32+exampleList>]],
            [mstore, 480, 7],
            [mstore, 512, 10],
            # Line 10
            [if,
              [sgt,
                [mload, 512 <z>],
                [with,
                  l,
                  [mload, 480 <x>],
                  [with,
                    r,
                    [calldataload, 4 <y>],
                    [seq, [clamp, [mload, 96], [add, l, r], [mload, 64]]]]]],
              # Line 11
              [seq,
                [mstore,
                  512 <z>,
                  [with,
                    l,
                    [mload, 480 <x>],
                    [with,
                      r,
                      [calldataload, 4 <y>],
                      [seq, [clamp, [mload, 96], [sub, l, r], [mload, 64]]]]]],
                pass]],
            # Line 12
            [repeat,
              544,
              5,
              5,
              [seq,
                [with,
                  _mloc,
                  480 <x>,
                  [mstore,
                    _mloc,
                    [with,
                      l,
                      [mload, _mloc],
                      [with,
                        r,
                        [mload, 512 <z>],
                        [seq, [clamp, [mload, 96], [add, l, r], [mload, 64]]]]]]],
                pass]],
            # Line 3
            None,
            pass,
            stop]],
        [seq_unchecked, [label, fallback], /* Default function */ [revert, 0, 0]]],
      0]]]
4
[4]
0
[0]
28
[28]
1461501637330902918203684832716283019655932542976
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
32
[32]
170141183460469231731687303715884105727
[127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]
64
[64]
115792089237316195423570985008687907853099843482180094807725896704197245534208
[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
96
[96]
1701411834604692317316873037158841057270000000000
[1, 42, 5, 241, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 171, 244, 28, 0]
128
[128]
115792089237316195423570985006986496018665292348323691002298742950633129639936
[255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 213, 250, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
160
[160]
794883580
[47, 96, 245, 252]
0
[0]
96
[96]
4
[4]
64
[64]
1
[1]
320
[1, 64]
352
[1, 96]
10
[10]
11
[11]
32
[32]
12
[12]
64
[64]
384
[1, 128]
448
[1, 192]
7
[7]
480
[1, 224]
10
[10]
512
[2, 0]
480
[1, 224]
4
[4]
96
[96]
64
[64]
512
[2, 0]
480
[1, 224]
4
[4]
96
[96]
64
[64]
512
[2, 0]
5
code.args[0] withargs existing_labels breakdest height
544
{}
set()
None
0
code.args[1] withargs existing_labels breakdest height+1
5
{}
set()
None
1
544
[2, 32]
['PUSH2', 2, 32]
5
[5]
['PUSH2', 2, 32, 'PUSH1', 5]
480
[1, 224]
512
[2, 0]
96
[96]
64
[64]
final
['PUSH2', 2, 32, 'PUSH1', 5, 'PUSH1', 5, 'DUP2', 'DUP4', 'MSTORE', 'ADD', '_sym_13', 'JUMPDEST', 'PUSH2', 1, 224, 'DUP1', 'MLOAD', 'PUSH2', 2, 0, 'MLOAD', 'PUSH1', 96, 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP1', 'PUSH1', 64, 'MLOAD', 'SWAP1', 'SGT', 'ISZERO', '_sym_16', 'JUMPI', 'PUSH1', 0, 'DUP1', 'REVERT', '_sym_16', 'JUMPDEST', 'DUP1', 'SWAP2', 'SWAP1', 'SLT', 'ISZERO', '_sym_17', 'JUMPI', 'PUSH1', 0, 'DUP1', 'REVERT', '_sym_17', 'JUMPDEST', 'SWAP1', 'POP', 'SWAP1', 'POP', 'DUP2', 'MSTORE', 'POP', '_sym_14', 'JUMPDEST', 'DUP2', 'MLOAD', 'PUSH1', 1, 'ADD', 'DUP1', 'DUP4', 'MSTORE', 'DUP2', 'EQ', 'ISZERO', '_sym_13', 'JUMPI', '_sym_15', 'JUMPDEST', 'POP', 'POP']
Error compiling: prova.vy
