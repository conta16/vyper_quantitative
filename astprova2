ast_struct
{'body': [<_ast.FunctionDef object at 0x7fa458458b38>], 'first_token': Token(type=57, string='#numb: public(int128)', start=(1, 0), end=(1, 21), line='#numb: public(int128)\n', index=0, startpos=0, endpos=21), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 0, 'ast_type': 'Module', 'lineno': 1, 'col_offset': 0, 'end_lineno': 13, 'end_col_offset': 10, 'src': '0:219:0', 'node_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'name': 'calculate', 'args': <_ast.arguments object at 0x7fa458458b00>, 'body': [<_ast.AnnAssign object at 0x7fa458458c18>, <_ast.AnnAssign object at 0x7fa458458cc0>, <_ast.AnnAssign object at 0x7fa458458e10>, <_ast.If object at 0x7fa458458ef0>, <_ast.For object at 0x7fa45845e080>, <_ast.While object at 0x7fa45845e278>], 'decorator_list': [<_ast.Name object at 0x7fa45845e390>], 'returns': None, 'lineno': 3, 'col_offset': 0, 'first_token': Token(type=53, string='@', start=(3, 0), end=(3, 1), line='@public\n', index=3, startpos=23, endpos=24), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 1, 'ast_type': 'FunctionDef', 'end_lineno': 13, 'end_col_offset': 10, 'src': '23:196:0', 'node_source_code': '@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'args': [<_ast.arg object at 0x7fa458458ba8>], 'vararg': None, 'kwonlyargs': [], 'kw_defaults': [], 'kwarg': None, 'defaults': [], 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 2, 'ast_type': 'arguments', 'lineno': 4, 'col_offset': 14, 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'arg': 'y', 'annotation': <_ast.Name object at 0x7fa458458b70>, 'lineno': 4, 'col_offset': 14, 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 3, 'ast_type': 'arg', 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 4, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 4, 'ast_type': 'Name', 'end_lineno': 4, 'end_col_offset': 23, 'src': '48:6:0', 'node_source_code': 'int128'}
ast_struct
{'target': <_ast.Name object at 0x7fa458458be0>, 'annotation': <_ast.Name object at 0x7fa458458c88>, 'value': <_ast.NameConstant object at 0x7fa458458c50>, 'simple': 1, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 6, 'ast_type': 'AnnAssign', 'end_lineno': 5, 'end_col_offset': 20, 'src': '61:16:0', 'node_source_code': 'tes: bool = True'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 7, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 7, 'src': '61:3:0', 'node_source_code': 'tes'}
ast_struct
{'id': 'bool', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 5, 'col_offset': 9, 'first_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'last_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 9, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 13, 'src': '66:4:0', 'node_source_code': 'bool'}
ast_struct
{'value': True, 'lineno': 5, 'col_offset': 16, 'first_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 11, 'ast_type': 'NameConstant', 'end_lineno': 5, 'end_col_offset': 20, 'src': '73:4:0', 'node_source_code': 'True'}
ast_struct
{'target': <_ast.Name object at 0x7fa458458cf8>, 'annotation': <_ast.Name object at 0x7fa458458d30>, 'value': <_ast.BinOp object at 0x7fa458458d68>, 'simple': 1, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 12, 'ast_type': 'AnnAssign', 'end_lineno': 6, 'end_col_offset': 19, 'src': '82:15:0', 'node_source_code': 'x: int128 = 5+2'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'last_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 13, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 5, 'src': '82:1:0', 'node_source_code': 'x'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 6, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(6, 7), end=(6, 13), line='    x: int128 = 5+2\n', index=24, startpos=85, endpos=91), 'last_token': Token(type=1, string='int128', start=(6, 7), end=(6, 13), line='    x: int128 = 5+2\n', index=24, startpos=85, endpos=91), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 15, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 13, 'src': '85:6:0', 'node_source_code': 'int128'}
ast_struct
{'left': <_ast.Num object at 0x7fa458458da0>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'right': <_ast.Num object at 0x7fa458458dd8>, 'lineno': 6, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 17, 'ast_type': 'BinOp', 'end_lineno': 6, 'end_col_offset': 19, 'src': '94:3:0', 'node_source_code': '5+2'}
ast_struct
{'n': 5, 'lineno': 6, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'last_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 18, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 17, 'src': '94:1:0', 'node_source_code': '5'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 6, 'col_offset': 18, 'first_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 20, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 19, 'src': '96:1:0', 'node_source_code': '2'}
ast_struct
{'target': <_ast.Name object at 0x7fa458458e48>, 'annotation': <_ast.Name object at 0x7fa458458e80>, 'value': <_ast.Num object at 0x7fa458458eb8>, 'simple': 1, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'last_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 21, 'ast_type': 'AnnAssign', 'end_lineno': 7, 'end_col_offset': 18, 'src': '102:14:0', 'node_source_code': 'z: int128 = 10'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'last_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 22, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 5, 'src': '102:1:0', 'node_source_code': 'z'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 7, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(7, 7), end=(7, 13), line='    z: int128 = 10\n', index=32, startpos=105, endpos=111), 'last_token': Token(type=1, string='int128', start=(7, 7), end=(7, 13), line='    z: int128 = 10\n', index=32, startpos=105, endpos=111), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 24, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 13, 'src': '105:6:0', 'node_source_code': 'int128'}
ast_struct
{'n': 10, 'lineno': 7, 'col_offset': 16, 'first_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'last_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 26, 'ast_type': 'Int', 'end_lineno': 7, 'end_col_offset': 18, 'src': '114:2:0', 'node_source_code': '10'}
ast_struct
{'test': <_ast.Compare object at 0x7fa458458f28>, 'body': [<_ast.Assign object at 0x7fa4584587b8>], 'orelse': [], 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='if', start=(8, 4), end=(8, 6), line='    if (z > x + y):\n', index=36, startpos=121, endpos=123), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 27, 'ast_type': 'If', 'end_lineno': 9, 'end_col_offset': 18, 'src': '121:34:0', 'node_source_code': 'if (z > x + y):\n     z = x * y - 2'}
ast_struct
{'left': <_ast.Name object at 0x7fa4584585f8>, 'ops': [<_ast.Gt object at 0x7fa459d9d860>], 'comparators': [<_ast.BinOp object at 0x7fa458458748>], 'lineno': 8, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 28, 'ast_type': 'Compare', 'end_lineno': 8, 'end_col_offset': 17, 'src': '125:9:0', 'node_source_code': 'z > x + y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'last_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 29, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 9, 'src': '125:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 31, 'ast_type': 'Gt', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'left': <_ast.Name object at 0x7fa458458710>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'right': <_ast.Name object at 0x7fa458458a58>, 'lineno': 8, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 32, 'ast_type': 'BinOp', 'end_lineno': 8, 'end_col_offset': 17, 'src': '129:5:0', 'node_source_code': 'x + y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'last_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 33, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 13, 'src': '129:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 36, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 17, 'src': '133:1:0', 'node_source_code': 'y'}
ast_struct
{'targets': [<_ast.Name object at 0x7fa4584589b0>], 'value': <_ast.BinOp object at 0x7fa458458f60>, 'lineno': 9, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 38, 'ast_type': 'Assign', 'end_lineno': 9, 'end_col_offset': 18, 'src': '142:13:0', 'node_source_code': 'z = x * y - 2'}
ast_struct
{'left': <_ast.BinOp object at 0x7fa458458f98>, 'op': <_ast.Sub object at 0x7fa459d9b0b8>, 'right': <_ast.Num object at 0x7fa45845e048>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 41, 'ast_type': 'BinOp', 'end_lineno': 9, 'end_col_offset': 18, 'src': '146:9:0', 'node_source_code': 'x * y - 2'}
ast_struct
{'left': <_ast.Name object at 0x7fa458458fd0>, 'op': <_ast.Mult object at 0x7fa459d9b1d0>, 'right': <_ast.Name object at 0x7fa458458630>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 42, 'ast_type': 'BinOp', 'end_lineno': 9, 'end_col_offset': 14, 'src': '146:5:0', 'node_source_code': 'x * y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 43, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 10, 'src': '146:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 45, 'ast_type': 'Mult', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 9, 'col_offset': 13, 'first_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'last_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 46, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 14, 'src': '150:1:0', 'node_source_code': 'y'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 48, 'ast_type': 'Sub', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 9, 'col_offset': 17, 'first_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 49, 'ast_type': 'Int', 'end_lineno': 9, 'end_col_offset': 18, 'src': '154:1:0', 'node_source_code': '2'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 9, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'last_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 39, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 6, 'src': '142:1:0', 'node_source_code': 'z'}
ast_struct
{'target': <_ast.Name object at 0x7fa45845e0b8>, 'iter': <_ast.Call object at 0x7fa45845e0f0>, 'body': [<_ast.AugAssign object at 0x7fa45845e1d0>], 'orelse': [], 'lineno': 10, 'col_offset': 4, 'first_token': Token(type=1, string='for', start=(10, 4), end=(10, 7), line='    for i in range(5,10):\n', index=56, startpos=160, endpos=163), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 50, 'ast_type': 'For', 'end_lineno': 11, 'end_col_offset': 10, 'src': '160:32:0', 'node_source_code': 'for i in range(5,10):\n      x+=z'}
ast_struct
{'id': 'i', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='i', start=(10, 8), end=(10, 9), line='    for i in range(5,10):\n', index=57, startpos=164, endpos=165), 'last_token': Token(type=1, string='i', start=(10, 8), end=(10, 9), line='    for i in range(5,10):\n', index=57, startpos=164, endpos=165), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 51, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 9, 'src': '164:1:0', 'node_source_code': 'i'}
ast_struct
{'func': <_ast.Name object at 0x7fa45845e128>, 'args': [<_ast.Num object at 0x7fa45845e160>, <_ast.Num object at 0x7fa45845e198>], 'keywords': [], 'lineno': 10, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'last_token': Token(type=53, string=')', start=(10, 23), end=(10, 24), line='    for i in range(5,10):\n', index=64, startpos=179, endpos=180), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 53, 'ast_type': 'Call', 'end_lineno': 10, 'end_col_offset': 24, 'src': '169:11:0', 'node_source_code': 'range(5,10)'}
ast_struct
{'id': 'range', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 10, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'last_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 54, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 18, 'src': '169:5:0', 'node_source_code': 'range'}
ast_struct
{'n': 5, 'lineno': 10, 'col_offset': 19, 'first_token': Token(type=2, string='5', start=(10, 19), end=(10, 20), line='    for i in range(5,10):\n', index=61, startpos=175, endpos=176), 'last_token': Token(type=2, string='5', start=(10, 19), end=(10, 20), line='    for i in range(5,10):\n', index=61, startpos=175, endpos=176), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 56, 'ast_type': 'Int', 'end_lineno': 10, 'end_col_offset': 20, 'src': '175:1:0', 'node_source_code': '5'}
ast_struct
{'n': 10, 'lineno': 10, 'col_offset': 21, 'first_token': Token(type=2, string='10', start=(10, 21), end=(10, 23), line='    for i in range(5,10):\n', index=63, startpos=177, endpos=179), 'last_token': Token(type=2, string='10', start=(10, 21), end=(10, 23), line='    for i in range(5,10):\n', index=63, startpos=177, endpos=179), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 57, 'ast_type': 'Int', 'end_lineno': 10, 'end_col_offset': 23, 'src': '177:2:0', 'node_source_code': '10'}
ast_struct
{'target': <_ast.Name object at 0x7fa45845e208>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'value': <_ast.Name object at 0x7fa45845e240>, 'lineno': 11, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 58, 'ast_type': 'AugAssign', 'end_lineno': 11, 'end_col_offset': 10, 'src': '188:4:0', 'node_source_code': 'x+=z'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 11, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'last_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 59, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 7, 'src': '188:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 62, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 10, 'src': '191:1:0', 'node_source_code': 'z'}
ast_struct
{'test': <_ast.Name object at 0x7fa45845e2b0>, 'body': [<_ast.AugAssign object at 0x7fa45845e2e8>], 'orelse': [], 'lineno': 12, 'col_offset': 4, 'first_token': Token(type=1, string='while', start=(12, 4), end=(12, 9), line='    while(tes):\n', index=73, startpos=197, endpos=202), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 64, 'ast_type': 'While', 'end_lineno': 13, 'end_col_offset': 10, 'src': '197:22:0', 'node_source_code': 'while(tes):\n      z+=1'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 12, 'col_offset': 10, 'first_token': Token(type=1, string='tes', start=(12, 10), end=(12, 13), line='    while(tes):\n', index=75, startpos=203, endpos=206), 'last_token': Token(type=1, string='tes', start=(12, 10), end=(12, 13), line='    while(tes):\n', index=75, startpos=203, endpos=206), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 65, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 13, 'src': '203:3:0', 'node_source_code': 'tes'}
ast_struct
{'target': <_ast.Name object at 0x7fa45845e320>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'value': <_ast.Num object at 0x7fa45845e358>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 67, 'ast_type': 'AugAssign', 'end_lineno': 13, 'end_col_offset': 10, 'src': '215:4:0', 'node_source_code': 'z+=1'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'last_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 68, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 7, 'src': '215:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 1, 'lineno': 13, 'col_offset': 9, 'first_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 71, 'ast_type': 'Int', 'end_lineno': 13, 'end_col_offset': 10, 'src': '218:1:0', 'node_source_code': '1'}
ast_struct
{'id': 'public', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 3, 'col_offset': 1, 'first_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'last_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n', 'node_id': 72, 'ast_type': 'Name', 'end_lineno': 3, 'end_col_offset': 7, 'src': '24:6:0', 'node_source_code': 'public'}
ast_struct
{'body': [<_ast.FunctionDef object at 0x7fa45845ea20>], 'first_token': Token(type=57, string='#numb: public(int128)', start=(1, 0), end=(1, 21), line='#numb: public(int128)\n', index=0, startpos=0, endpos=21), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 0, 'ast_type': 'Module', 'lineno': 1, 'col_offset': 0, 'end_lineno': 13, 'end_col_offset': 10, 'src': '0:219:0', 'node_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'name': 'calculate', 'args': <_ast.arguments object at 0x7fa4581ef7f0>, 'body': [<_ast.AnnAssign object at 0x7fa4581ef898>, <_ast.AnnAssign object at 0x7fa4581ef978>, <_ast.AnnAssign object at 0x7fa4581efac8>, <_ast.If object at 0x7fa4581efba8>, <_ast.For object at 0x7fa4581efda0>, <_ast.While object at 0x7fa4581eff98>], 'decorator_list': [<_ast.Name object at 0x7fa4581f40f0>], 'returns': None, 'lineno': 3, 'col_offset': 0, 'first_token': Token(type=53, string='@', start=(3, 0), end=(3, 1), line='@public\n', index=3, startpos=23, endpos=24), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 1, 'ast_type': 'FunctionDef', 'end_lineno': 13, 'end_col_offset': 10, 'src': '23:196:0', 'node_source_code': '@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1'}
ast_struct
{'args': [<_ast.arg object at 0x7fa4581ef828>], 'vararg': None, 'kwonlyargs': [], 'kw_defaults': [], 'kwarg': None, 'defaults': [], 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 2, 'ast_type': 'arguments', 'lineno': 4, 'col_offset': 14, 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'arg': 'y', 'annotation': <_ast.Name object at 0x7fa4581ef860>, 'lineno': 4, 'col_offset': 14, 'first_token': Token(type=1, string='y', start=(4, 14), end=(4, 15), line='def calculate(y: int128):\n', index=9, startpos=45, endpos=46), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 3, 'ast_type': 'arg', 'end_lineno': 4, 'end_col_offset': 23, 'src': '45:9:0', 'node_source_code': 'y: int128'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 4, 'col_offset': 17, 'first_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'last_token': Token(type=1, string='int128', start=(4, 17), end=(4, 23), line='def calculate(y: int128):\n', index=11, startpos=48, endpos=54), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 4, 'ast_type': 'Name', 'end_lineno': 4, 'end_col_offset': 23, 'src': '48:6:0', 'node_source_code': 'int128'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581ef8d0>, 'annotation': <_ast.Name object at 0x7fa4581ef908>, 'value': <_ast.NameConstant object at 0x7fa4581ef940>, 'simple': 1, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 6, 'ast_type': 'AnnAssign', 'end_lineno': 5, 'end_col_offset': 20, 'src': '61:16:0', 'node_source_code': 'tes: bool = True'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 5, 'col_offset': 4, 'first_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'last_token': Token(type=1, string='tes', start=(5, 4), end=(5, 7), line='    tes: bool = True\n', index=16, startpos=61, endpos=64), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 7, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 7, 'src': '61:3:0', 'node_source_code': 'tes'}
ast_struct
{'id': 'bool', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 5, 'col_offset': 9, 'first_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'last_token': Token(type=1, string='bool', start=(5, 9), end=(5, 13), line='    tes: bool = True\n', index=18, startpos=66, endpos=70), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 9, 'ast_type': 'Name', 'end_lineno': 5, 'end_col_offset': 13, 'src': '66:4:0', 'node_source_code': 'bool'}
ast_struct
{'value': True, 'lineno': 5, 'col_offset': 16, 'first_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'last_token': Token(type=1, string='True', start=(5, 16), end=(5, 20), line='    tes: bool = True\n', index=20, startpos=73, endpos=77), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 11, 'ast_type': 'NameConstant', 'end_lineno': 5, 'end_col_offset': 20, 'src': '73:4:0', 'node_source_code': 'True'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581ef9b0>, 'annotation': <_ast.Name object at 0x7fa4581ef9e8>, 'value': <_ast.BinOp object at 0x7fa4581efa20>, 'simple': 1, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 12, 'ast_type': 'AnnAssign', 'end_lineno': 6, 'end_col_offset': 19, 'src': '82:15:0', 'node_source_code': 'x: int128 = 5+2'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 6, 'col_offset': 4, 'first_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'last_token': Token(type=1, string='x', start=(6, 4), end=(6, 5), line='    x: int128 = 5+2\n', index=22, startpos=82, endpos=83), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 13, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 5, 'src': '82:1:0', 'node_source_code': 'x'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 6, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(6, 7), end=(6, 13), line='    x: int128 = 5+2\n', index=24, startpos=85, endpos=91), 'last_token': Token(type=1, string='int128', start=(6, 7), end=(6, 13), line='    x: int128 = 5+2\n', index=24, startpos=85, endpos=91), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 15, 'ast_type': 'Name', 'end_lineno': 6, 'end_col_offset': 13, 'src': '85:6:0', 'node_source_code': 'int128'}
ast_struct
{'left': <_ast.Num object at 0x7fa4581efa58>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'right': <_ast.Num object at 0x7fa4581efa90>, 'lineno': 6, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 17, 'ast_type': 'BinOp', 'end_lineno': 6, 'end_col_offset': 19, 'src': '94:3:0', 'node_source_code': '5+2'}
ast_struct
{'n': 5, 'lineno': 6, 'col_offset': 16, 'first_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'last_token': Token(type=2, string='5', start=(6, 16), end=(6, 17), line='    x: int128 = 5+2\n', index=26, startpos=94, endpos=95), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 18, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 17, 'src': '94:1:0', 'node_source_code': '5'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 6, 'col_offset': 18, 'first_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'last_token': Token(type=2, string='2', start=(6, 18), end=(6, 19), line='    x: int128 = 5+2\n', index=28, startpos=96, endpos=97), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 20, 'ast_type': 'Int', 'end_lineno': 6, 'end_col_offset': 19, 'src': '96:1:0', 'node_source_code': '2'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581efb00>, 'annotation': <_ast.Name object at 0x7fa4581efb38>, 'value': <_ast.Num object at 0x7fa4581efb70>, 'simple': 1, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'last_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 21, 'ast_type': 'AnnAssign', 'end_lineno': 7, 'end_col_offset': 18, 'src': '102:14:0', 'node_source_code': 'z: int128 = 10'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 7, 'col_offset': 4, 'first_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'last_token': Token(type=1, string='z', start=(7, 4), end=(7, 5), line='    z: int128 = 10\n', index=30, startpos=102, endpos=103), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 22, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 5, 'src': '102:1:0', 'node_source_code': 'z'}
ast_struct
{'id': 'int128', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 7, 'col_offset': 7, 'first_token': Token(type=1, string='int128', start=(7, 7), end=(7, 13), line='    z: int128 = 10\n', index=32, startpos=105, endpos=111), 'last_token': Token(type=1, string='int128', start=(7, 7), end=(7, 13), line='    z: int128 = 10\n', index=32, startpos=105, endpos=111), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 24, 'ast_type': 'Name', 'end_lineno': 7, 'end_col_offset': 13, 'src': '105:6:0', 'node_source_code': 'int128'}
ast_struct
{'n': 10, 'lineno': 7, 'col_offset': 16, 'first_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'last_token': Token(type=2, string='10', start=(7, 16), end=(7, 18), line='    z: int128 = 10\n', index=34, startpos=114, endpos=116), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 26, 'ast_type': 'Int', 'end_lineno': 7, 'end_col_offset': 18, 'src': '114:2:0', 'node_source_code': '10'}
ast_struct
{'test': <_ast.Compare object at 0x7fa4581efbe0>, 'body': [<_ast.Assign object at 0x7fa4581ef710>], 'orelse': [], 'lineno': 8, 'col_offset': 4, 'first_token': Token(type=1, string='if', start=(8, 4), end=(8, 6), line='    if (z > x + y):\n', index=36, startpos=121, endpos=123), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 27, 'ast_type': 'If', 'end_lineno': 9, 'end_col_offset': 18, 'src': '121:34:0', 'node_source_code': 'if (z > x + y):\n     z = x * y - 2'}
ast_struct
{'left': <_ast.Name object at 0x7fa4581efc18>, 'ops': [<_ast.Gt object at 0x7fa459d9d860>], 'comparators': [<_ast.BinOp object at 0x7fa4581efc50>], 'lineno': 8, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 28, 'ast_type': 'Compare', 'end_lineno': 8, 'end_col_offset': 17, 'src': '125:9:0', 'node_source_code': 'z > x + y'}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 8, 'first_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'last_token': Token(type=1, string='z', start=(8, 8), end=(8, 9), line='    if (z > x + y):\n', index=38, startpos=125, endpos=126), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 29, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 9, 'src': '125:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 31, 'ast_type': 'Gt', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'left': <_ast.Name object at 0x7fa4581efc88>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'right': <_ast.Name object at 0x7fa4581ef748>, 'lineno': 8, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 32, 'ast_type': 'BinOp', 'end_lineno': 8, 'end_col_offset': 17, 'src': '129:5:0', 'node_source_code': 'x + y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 12, 'first_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'last_token': Token(type=1, string='x', start=(8, 12), end=(8, 13), line='    if (z > x + y):\n', index=40, startpos=129, endpos=130), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 33, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 13, 'src': '129:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 8, 'col_offset': 16, 'first_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'last_token': Token(type=1, string='y', start=(8, 16), end=(8, 17), line='    if (z > x + y):\n', index=42, startpos=133, endpos=134), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 36, 'ast_type': 'Name', 'end_lineno': 8, 'end_col_offset': 17, 'src': '133:1:0', 'node_source_code': 'y'}
ast_struct
{'targets': [<_ast.Name object at 0x7fa4581ef5f8>], 'value': <_ast.BinOp object at 0x7fa4581ef4a8>, 'lineno': 9, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 38, 'ast_type': 'Assign', 'end_lineno': 9, 'end_col_offset': 18, 'src': '142:13:0', 'node_source_code': 'z = x * y - 2'}
ast_struct
{'left': <_ast.BinOp object at 0x7fa4581efcc0>, 'op': <_ast.Sub object at 0x7fa459d9b0b8>, 'right': <_ast.Num object at 0x7fa4581efd68>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 41, 'ast_type': 'BinOp', 'end_lineno': 9, 'end_col_offset': 18, 'src': '146:9:0', 'node_source_code': 'x * y - 2'}
ast_struct
{'left': <_ast.Name object at 0x7fa4581efcf8>, 'op': <_ast.Mult object at 0x7fa459d9b1d0>, 'right': <_ast.Name object at 0x7fa4581efd30>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 42, 'ast_type': 'BinOp', 'end_lineno': 9, 'end_col_offset': 14, 'src': '146:5:0', 'node_source_code': 'x * y'}
ast_struct
{'id': 'x', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 9, 'col_offset': 9, 'first_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'last_token': Token(type=1, string='x', start=(9, 9), end=(9, 10), line='     z = x * y - 2\n', index=49, startpos=146, endpos=147), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 43, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 10, 'src': '146:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 45, 'ast_type': 'Mult', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'y', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 9, 'col_offset': 13, 'first_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'last_token': Token(type=1, string='y', start=(9, 13), end=(9, 14), line='     z = x * y - 2\n', index=51, startpos=150, endpos=151), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 46, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 14, 'src': '150:1:0', 'node_source_code': 'y'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 48, 'ast_type': 'Sub', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 2, 'lineno': 9, 'col_offset': 17, 'first_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'last_token': Token(type=2, string='2', start=(9, 17), end=(9, 18), line='     z = x * y - 2\n', index=53, startpos=154, endpos=155), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 49, 'ast_type': 'Int', 'end_lineno': 9, 'end_col_offset': 18, 'src': '154:1:0', 'node_source_code': '2'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 9, 'col_offset': 5, 'first_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'last_token': Token(type=1, string='z', start=(9, 5), end=(9, 6), line='     z = x * y - 2\n', index=47, startpos=142, endpos=143), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 39, 'ast_type': 'Name', 'end_lineno': 9, 'end_col_offset': 6, 'src': '142:1:0', 'node_source_code': 'z'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581efdd8>, 'iter': <_ast.Call object at 0x7fa4581efe10>, 'body': [<_ast.AugAssign object at 0x7fa4581efef0>], 'orelse': [], 'lineno': 10, 'col_offset': 4, 'first_token': Token(type=1, string='for', start=(10, 4), end=(10, 7), line='    for i in range(5,10):\n', index=56, startpos=160, endpos=163), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 50, 'ast_type': 'For', 'end_lineno': 11, 'end_col_offset': 10, 'src': '160:32:0', 'node_source_code': 'for i in range(5,10):\n      x+=z'}
ast_struct
{'id': 'i', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 10, 'col_offset': 8, 'first_token': Token(type=1, string='i', start=(10, 8), end=(10, 9), line='    for i in range(5,10):\n', index=57, startpos=164, endpos=165), 'last_token': Token(type=1, string='i', start=(10, 8), end=(10, 9), line='    for i in range(5,10):\n', index=57, startpos=164, endpos=165), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 51, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 9, 'src': '164:1:0', 'node_source_code': 'i'}
ast_struct
{'func': <_ast.Name object at 0x7fa4581efe48>, 'args': [<_ast.Num object at 0x7fa4581efe80>, <_ast.Num object at 0x7fa4581efeb8>], 'keywords': [], 'lineno': 10, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'last_token': Token(type=53, string=')', start=(10, 23), end=(10, 24), line='    for i in range(5,10):\n', index=64, startpos=179, endpos=180), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 53, 'ast_type': 'Call', 'end_lineno': 10, 'end_col_offset': 24, 'src': '169:11:0', 'node_source_code': 'range(5,10)'}
ast_struct
{'id': 'range', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 10, 'col_offset': 13, 'first_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'last_token': Token(type=1, string='range', start=(10, 13), end=(10, 18), line='    for i in range(5,10):\n', index=59, startpos=169, endpos=174), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 54, 'ast_type': 'Name', 'end_lineno': 10, 'end_col_offset': 18, 'src': '169:5:0', 'node_source_code': 'range'}
ast_struct
{'n': 5, 'lineno': 10, 'col_offset': 19, 'first_token': Token(type=2, string='5', start=(10, 19), end=(10, 20), line='    for i in range(5,10):\n', index=61, startpos=175, endpos=176), 'last_token': Token(type=2, string='5', start=(10, 19), end=(10, 20), line='    for i in range(5,10):\n', index=61, startpos=175, endpos=176), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 56, 'ast_type': 'Int', 'end_lineno': 10, 'end_col_offset': 20, 'src': '175:1:0', 'node_source_code': '5'}
ast_struct
{'n': 10, 'lineno': 10, 'col_offset': 21, 'first_token': Token(type=2, string='10', start=(10, 21), end=(10, 23), line='    for i in range(5,10):\n', index=63, startpos=177, endpos=179), 'last_token': Token(type=2, string='10', start=(10, 21), end=(10, 23), line='    for i in range(5,10):\n', index=63, startpos=177, endpos=179), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 57, 'ast_type': 'Int', 'end_lineno': 10, 'end_col_offset': 23, 'src': '177:2:0', 'node_source_code': '10'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581eff28>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'value': <_ast.Name object at 0x7fa4581eff60>, 'lineno': 11, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 58, 'ast_type': 'AugAssign', 'end_lineno': 11, 'end_col_offset': 10, 'src': '188:4:0', 'node_source_code': 'x+=z'}
ast_struct
{'id': 'x', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 11, 'col_offset': 6, 'first_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'last_token': Token(type=1, string='x', start=(11, 6), end=(11, 7), line='      x+=z\n', index=68, startpos=188, endpos=189), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 59, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 7, 'src': '188:1:0', 'node_source_code': 'x'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'id': 'z', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 11, 'col_offset': 9, 'first_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'last_token': Token(type=1, string='z', start=(11, 9), end=(11, 10), line='      x+=z\n', index=70, startpos=191, endpos=192), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 62, 'ast_type': 'Name', 'end_lineno': 11, 'end_col_offset': 10, 'src': '191:1:0', 'node_source_code': 'z'}
ast_struct
{'test': <_ast.Name object at 0x7fa4581effd0>, 'body': [<_ast.AugAssign object at 0x7fa4581f4048>], 'orelse': [], 'lineno': 12, 'col_offset': 4, 'first_token': Token(type=1, string='while', start=(12, 4), end=(12, 9), line='    while(tes):\n', index=73, startpos=197, endpos=202), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 64, 'ast_type': 'While', 'end_lineno': 13, 'end_col_offset': 10, 'src': '197:22:0', 'node_source_code': 'while(tes):\n      z+=1'}
ast_struct
{'id': 'tes', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 12, 'col_offset': 10, 'first_token': Token(type=1, string='tes', start=(12, 10), end=(12, 13), line='    while(tes):\n', index=75, startpos=203, endpos=206), 'last_token': Token(type=1, string='tes', start=(12, 10), end=(12, 13), line='    while(tes):\n', index=75, startpos=203, endpos=206), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 65, 'ast_type': 'Name', 'end_lineno': 12, 'end_col_offset': 13, 'src': '203:3:0', 'node_source_code': 'tes'}
ast_struct
{'target': <_ast.Name object at 0x7fa4581f4080>, 'op': <_ast.Add object at 0x7fa459d96f60>, 'value': <_ast.Num object at 0x7fa4581f40b8>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 67, 'ast_type': 'AugAssign', 'end_lineno': 13, 'end_col_offset': 10, 'src': '215:4:0', 'node_source_code': 'z+=1'}
ast_struct
{'id': 'z', 'ctx': <_ast.Store object at 0x7fa459d96198>, 'lineno': 13, 'col_offset': 6, 'first_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'last_token': Token(type=1, string='z', start=(13, 6), end=(13, 7), line='      z+=1\n', index=80, startpos=215, endpos=216), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 68, 'ast_type': 'Name', 'end_lineno': 13, 'end_col_offset': 7, 'src': '215:1:0', 'node_source_code': 'z'}
ast_struct
{'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 70, 'ast_type': 'Add', 'lineno': None, 'col_offset': None, 'end_lineno': None, 'end_col_offset': None}
ast_struct
{'n': 1, 'lineno': 13, 'col_offset': 9, 'first_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'last_token': Token(type=2, string='1', start=(13, 9), end=(13, 10), line='      z+=1\n', index=82, startpos=218, endpos=219), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 71, 'ast_type': 'Int', 'end_lineno': 13, 'end_col_offset': 10, 'src': '218:1:0', 'node_source_code': '1'}
ast_struct
{'id': 'public', 'ctx': <_ast.Load object at 0x7fa459d96080>, 'lineno': 3, 'col_offset': 1, 'first_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'last_token': Token(type=1, string='public', start=(3, 1), end=(3, 7), line='@public\n', index=4, startpos=24, endpos=30), 'full_source_code': '#numb: public(int128)\n\n@public\ndef calculate(y: int128):\n    tes: bool = True\n    x: int128 = 5+2\n    z: int128 = 10\n    if (z > x + y):\n     z = x * y - 2\n    for i in range(5,10):\n      x+=z\n    while(tes):\n      z+=1\n#    te = 1\n#    tes = x\n#@public\n#def difficult():\n#    y: int128 = 100\n\n', 'node_id': 72, 'ast_type': 'Name', 'end_lineno': 3, 'end_col_offset': 7, 'src': '24:6:0', 'node_source_code': 'public'}
{"contract_name": "prova.vy", "ast": {"end_lineno": 13, "col_offset": 0, "ast_type": "Module", "name": null, "doc_string": null, "node_id": 0, "lineno": 1, "src": "0:219:0", "end_col_offset": 10, "body": [{"end_lineno": 13, "pos": null, "ast_type": "FunctionDef", "col_offset": 0, "name": "calculate", "doc_string": null, "decorator_list": [{"end_lineno": 3, "id": "public", "ast_type": "Name", "node_id": 72, "lineno": 3, "src": "24:6:0", "end_col_offset": 7, "col_offset": 1}], "node_id": 1, "lineno": 3, "src": "23:196:0", "end_col_offset": 10, "args": {"defaults": [], "end_lineno": 4, "ast_type": "arguments", "default": null, "node_id": 2, "lineno": 4, "src": "45:9:0", "end_col_offset": 23, "args": [{"end_lineno": 4, "ast_type": "arg", "arg": "y", "node_id": 3, "lineno": 4, "src": "45:9:0", "end_col_offset": 23, "col_offset": 14, "annotation": {"end_lineno": 4, "id": "int128", "ast_type": "Name", "node_id": 4, "lineno": 4, "src": "48:6:0", "end_col_offset": 23, "col_offset": 17}}], "col_offset": 14}, "body": [{"end_lineno": 5, "value": {"end_lineno": 5, "value": true, "ast_type": "NameConstant", "node_id": 11, "lineno": 5, "src": "73:4:0", "end_col_offset": 20, "col_offset": 16}, "ast_type": "AnnAssign", "target": {"end_lineno": 5, "id": "tes", "ast_type": "Name", "node_id": 7, "lineno": 5, "src": "61:3:0", "end_col_offset": 7, "col_offset": 4}, "node_id": 6, "lineno": 5, "src": "61:16:0", "end_col_offset": 20, "simple": 1, "col_offset": 4, "annotation": {"end_lineno": 5, "id": "bool", "ast_type": "Name", "node_id": 9, "lineno": 5, "src": "66:4:0", "end_col_offset": 13, "col_offset": 9}}, {"end_lineno": 6, "value": {"end_lineno": 6, "ast_type": "BinOp", "right": {"end_lineno": 6, "value": 2, "ast_type": "Int", "node_id": 20, "lineno": 6, "src": "96:1:0", "end_col_offset": 19, "col_offset": 18}, "node_id": 17, "op": {"end_lineno": 6, "ast_type": "Add", "node_id": 70, "lineno": 6, "src": "94:3:0", "end_col_offset": 19, "col_offset": 16}, "lineno": 6, "src": "94:3:0", "left": {"end_lineno": 6, "value": 5, "ast_type": "Int", "node_id": 18, "lineno": 6, "src": "94:1:0", "end_col_offset": 17, "col_offset": 16}, "end_col_offset": 19, "col_offset": 16}, "ast_type": "AnnAssign", "target": {"end_lineno": 6, "id": "x", "ast_type": "Name", "node_id": 13, "lineno": 6, "src": "82:1:0", "end_col_offset": 5, "col_offset": 4}, "node_id": 12, "lineno": 6, "src": "82:15:0", "end_col_offset": 19, "simple": 1, "col_offset": 4, "annotation": {"end_lineno": 6, "id": "int128", "ast_type": "Name", "node_id": 15, "lineno": 6, "src": "85:6:0", "end_col_offset": 13, "col_offset": 7}}, {"end_lineno": 7, "value": {"end_lineno": 7, "value": 10, "ast_type": "Int", "node_id": 26, "lineno": 7, "src": "114:2:0", "end_col_offset": 18, "col_offset": 16}, "ast_type": "AnnAssign", "target": {"end_lineno": 7, "id": "z", "ast_type": "Name", "node_id": 22, "lineno": 7, "src": "102:1:0", "end_col_offset": 5, "col_offset": 4}, "node_id": 21, "lineno": 7, "src": "102:14:0", "end_col_offset": 18, "simple": 1, "col_offset": 4, "annotation": {"end_lineno": 7, "id": "int128", "ast_type": "Name", "node_id": 24, "lineno": 7, "src": "105:6:0", "end_col_offset": 13, "col_offset": 7}}, {"end_lineno": 9, "col_offset": 4, "ast_type": "If", "orelse": [], "node_id": 27, "lineno": 8, "src": "121:34:0", "test": {"end_lineno": 8, "ast_type": "Compare", "right": {"end_lineno": 8, "ast_type": "BinOp", "right": {"end_lineno": 8, "id": "y", "ast_type": "Name", "node_id": 36, "lineno": 8, "src": "133:1:0", "end_col_offset": 17, "col_offset": 16}, "node_id": 32, "op": {"end_lineno": 8, "ast_type": "Add", "node_id": 70, "lineno": 8, "src": "129:5:0", "end_col_offset": 17, "col_offset": 12}, "lineno": 8, "src": "129:5:0", "left": {"end_lineno": 8, "id": "x", "ast_type": "Name", "node_id": 33, "lineno": 8, "src": "129:1:0", "end_col_offset": 13, "col_offset": 12}, "end_col_offset": 17, "col_offset": 12}, "node_id": 28, "op": {"end_lineno": 8, "ast_type": "Gt", "node_id": 31, "lineno": 8, "src": "125:9:0", "end_col_offset": 17, "col_offset": 8}, "lineno": 8, "src": "125:9:0", "left": {"end_lineno": 8, "id": "z", "ast_type": "Name", "node_id": 29, "lineno": 8, "src": "125:1:0", "end_col_offset": 9, "col_offset": 8}, "end_col_offset": 17, "col_offset": 8}, "end_col_offset": 18, "body": [{"end_lineno": 9, "value": {"end_lineno": 9, "ast_type": "BinOp", "right": {"end_lineno": 9, "value": 2, "ast_type": "Int", "node_id": 49, "lineno": 9, "src": "154:1:0", "end_col_offset": 18, "col_offset": 17}, "node_id": 41, "op": {"end_lineno": 9, "ast_type": "Sub", "node_id": 48, "lineno": 9, "src": "146:9:0", "end_col_offset": 18, "col_offset": 9}, "lineno": 9, "src": "146:9:0", "left": {"end_lineno": 9, "ast_type": "BinOp", "right": {"end_lineno": 9, "id": "y", "ast_type": "Name", "node_id": 46, "lineno": 9, "src": "150:1:0", "end_col_offset": 14, "col_offset": 13}, "node_id": 42, "op": {"end_lineno": 9, "ast_type": "Mult", "node_id": 45, "lineno": 9, "src": "146:5:0", "end_col_offset": 14, "col_offset": 9}, "lineno": 9, "src": "146:5:0", "left": {"end_lineno": 9, "id": "x", "ast_type": "Name", "node_id": 43, "lineno": 9, "src": "146:1:0", "end_col_offset": 10, "col_offset": 9}, "end_col_offset": 14, "col_offset": 9}, "end_col_offset": 18, "col_offset": 9}, "ast_type": "Assign", "node_id": 38, "lineno": 9, "src": "142:13:0", "end_col_offset": 18, "col_offset": 5, "target": {"end_lineno": 9, "id": "z", "ast_type": "Name", "node_id": 39, "lineno": 9, "src": "142:1:0", "end_col_offset": 6, "col_offset": 5}}]}, {"end_lineno": 11, "col_offset": 4, "ast_type": "For", "node_id": 50, "lineno": 10, "src": "160:32:0", "end_col_offset": 10, "iter": {"end_lineno": 10, "ast_type": "Call", "func": {"end_lineno": 10, "id": "range", "ast_type": "Name", "node_id": 54, "lineno": 10, "src": "169:5:0", "end_col_offset": 18, "col_offset": 13}, "keywords": [], "keyword": null, "node_id": 53, "lineno": 10, "src": "169:11:0", "end_col_offset": 24, "args": [{"end_lineno": 10, "value": 5, "ast_type": "Int", "node_id": 56, "lineno": 10, "src": "175:1:0", "end_col_offset": 20, "col_offset": 19}, {"end_lineno": 10, "value": 10, "ast_type": "Int", "node_id": 57, "lineno": 10, "src": "177:2:0", "end_col_offset": 23, "col_offset": 21}], "col_offset": 13}, "body": [{"end_lineno": 11, "value": {"end_lineno": 11, "id": "z", "ast_type": "Name", "node_id": 62, "lineno": 11, "src": "191:1:0", "end_col_offset": 10, "col_offset": 9}, "ast_type": "AugAssign", "node_id": 58, "op": {"end_lineno": 11, "ast_type": "Add", "node_id": 70, "lineno": 11, "src": "188:4:0", "end_col_offset": 10, "col_offset": 6}, "lineno": 11, "src": "188:4:0", "end_col_offset": 10, "col_offset": 6, "target": {"end_lineno": 11, "id": "x", "ast_type": "Name", "node_id": 59, "lineno": 11, "src": "188:1:0", "end_col_offset": 7, "col_offset": 6}}], "target": {"end_lineno": 10, "id": "i", "ast_type": "Name", "node_id": 51, "lineno": 10, "src": "164:1:0", "end_col_offset": 9, "col_offset": 8}}, {"end_lineno": 13, "ast_type": "While", "node_id": 64, "lineno": 12, "src": "197:22:0", "test": {"end_lineno": 12, "id": "tes", "ast_type": "Name", "node_id": 65, "lineno": 12, "src": "203:3:0", "end_col_offset": 13, "col_offset": 10}, "end_col_offset": 10, "body": [{"end_lineno": 13, "value": {"end_lineno": 13, "value": 1, "ast_type": "Int", "node_id": 71, "lineno": 13, "src": "218:1:0", "end_col_offset": 10, "col_offset": 9}, "ast_type": "AugAssign", "node_id": 67, "op": {"end_lineno": 13, "ast_type": "Add", "node_id": 70, "lineno": 13, "src": "215:4:0", "end_col_offset": 10, "col_offset": 6}, "lineno": 13, "src": "215:4:0", "end_col_offset": 10, "col_offset": 6, "target": {"end_lineno": 13, "id": "z", "ast_type": "Name", "node_id": 68, "lineno": 13, "src": "215:1:0", "end_col_offset": 7, "col_offset": 6}}], "col_offset": 4}], "returns": null}]}}
