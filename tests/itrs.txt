{}
{}
[{'returns': None, 'node_id': 12, 'col_offset': 0, 'end_col_offset': 22, 'end_lineno': 20, 'name': 'insertion_sort', 'decorator_list': [{'col_offset': 1, 'node_id': 128, 'end_col_offset': 8, 'end_lineno': 5, 'src': '52:7:0', 'ast_type': 'Name', 'id': 'private', 'lineno': 5}], 'doc_string': None, 'pos': None, 'src': '51:514:0', 'args': {'node_id': 13, 'col_offset': 0, 'end_col_offset': 1, 'end_lineno': 5, 'default': None, 'defaults': [], 'src': '51:1:0', 'args': [], 'ast_type': 'arguments', 'lineno': 5}, 'ast_type': 'FunctionDef', 'body': [{'lineno': 8, 'node_id': 14, 'col_offset': 8, 'end_col_offset': 28, 'end_lineno': 8, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 19, 'end_col_offset': 28, 'end_lineno': 8, 'src': '152:8:0', 'elements': [{'col_offset': 21, 'node_id': 20, 'end_col_offset': 22, 'end_lineno': 8, 'value': 5, 'src': '153:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 23, 'node_id': 21, 'end_col_offset': 24, 'end_lineno': 8, 'value': 2, 'src': '155:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 25, 'node_id': 22, 'end_col_offset': 27, 'end_lineno': 8, 'value': 10, 'src': '157:2:0', 'ast_type': 'Int', 'lineno': 8}], 'ast_type': 'List', 'lineno': 8}, 'src': '140:20:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 17, 'end_col_offset': 17, 'end_lineno': 8, 'src': '143:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 8}, 'target': {'col_offset': 8, 'node_id': 15, 'end_col_offset': 9, 'end_lineno': 8, 'src': '140:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 8}}, {'lineno': 9, 'node_id': 24, 'col_offset': 8, 'end_col_offset': 21, 'end_lineno': 9, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 29, 'end_col_offset': 21, 'end_lineno': 9, 'value': 1, 'src': '181:1:0', 'ast_type': 'Int', 'lineno': 9}, 'src': '169:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 27, 'end_col_offset': 17, 'end_lineno': 9, 'src': '172:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 9}, 'target': {'col_offset': 8, 'node_id': 25, 'end_col_offset': 9, 'end_lineno': 9, 'src': '169:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 9}}, {'col_offset': 8, 'node_id': 30, 'end_col_offset': 22, 'end_lineno': 20, 'src': '191:374:0', 'test': {'op': {'col_offset': 14, 'node_id': 68, 'end_lineno': 10, 'end_col_offset': 20, 'src': '197:6:0', 'ast_type': 'Lt', 'lineno': 10}, 'node_id': 31, 'col_offset': 14, 'end_col_offset': 20, 'end_lineno': 10, 'src': '197:6:0', 'ast_type': 'Compare', 'right': {'col_offset': 18, 'node_id': 35, 'end_col_offset': 20, 'end_lineno': 10, 'value': 10, 'src': '201:2:0', 'ast_type': 'Int', 'lineno': 10}, 'lineno': 10, 'left': {'col_offset': 14, 'node_id': 32, 'end_col_offset': 15, 'end_lineno': 10, 'src': '197:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 10}}, 'ast_type': 'While', 'body': [{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}], 'lineno': 10}], 'lineno': 5}]
{'Funder': [['sender', 'int128'], ['value', 'uint256']]}
{}
get_variables
[{'lineno': 8, 'node_id': 14, 'col_offset': 8, 'end_col_offset': 28, 'end_lineno': 8, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 19, 'end_col_offset': 28, 'end_lineno': 8, 'src': '152:8:0', 'elements': [{'col_offset': 21, 'node_id': 20, 'end_col_offset': 22, 'end_lineno': 8, 'value': 5, 'src': '153:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 23, 'node_id': 21, 'end_col_offset': 24, 'end_lineno': 8, 'value': 2, 'src': '155:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 25, 'node_id': 22, 'end_col_offset': 27, 'end_lineno': 8, 'value': 10, 'src': '157:2:0', 'ast_type': 'Int', 'lineno': 8}], 'ast_type': 'List', 'lineno': 8}, 'src': '140:20:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 17, 'end_col_offset': 17, 'end_lineno': 8, 'src': '143:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 8}, 'target': {'col_offset': 8, 'node_id': 15, 'end_col_offset': 9, 'end_lineno': 8, 'src': '140:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 8}}, {'lineno': 9, 'node_id': 24, 'col_offset': 8, 'end_col_offset': 21, 'end_lineno': 9, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 29, 'end_col_offset': 21, 'end_lineno': 9, 'value': 1, 'src': '181:1:0', 'ast_type': 'Int', 'lineno': 9}, 'src': '169:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 27, 'end_col_offset': 17, 'end_lineno': 9, 'src': '172:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 9}, 'target': {'col_offset': 8, 'node_id': 25, 'end_col_offset': 9, 'end_lineno': 9, 'src': '169:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 9}}, {'col_offset': 8, 'node_id': 30, 'end_col_offset': 22, 'end_lineno': 20, 'src': '191:374:0', 'test': {'op': {'col_offset': 14, 'node_id': 68, 'end_lineno': 10, 'end_col_offset': 20, 'src': '197:6:0', 'ast_type': 'Lt', 'lineno': 10}, 'node_id': 31, 'col_offset': 14, 'end_col_offset': 20, 'end_lineno': 10, 'src': '197:6:0', 'ast_type': 'Compare', 'right': {'col_offset': 18, 'node_id': 35, 'end_col_offset': 20, 'end_lineno': 10, 'value': 10, 'src': '201:2:0', 'ast_type': 'Int', 'lineno': 10}, 'lineno': 10, 'left': {'col_offset': 14, 'node_id': 32, 'end_col_offset': 15, 'end_lineno': 10, 'src': '197:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 10}}, 'ast_type': 'While', 'body': [{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}], 'lineno': 10}]
in loop
{'lineno': 8, 'node_id': 14, 'col_offset': 8, 'end_col_offset': 28, 'end_lineno': 8, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 19, 'end_col_offset': 28, 'end_lineno': 8, 'src': '152:8:0', 'elements': [{'col_offset': 21, 'node_id': 20, 'end_col_offset': 22, 'end_lineno': 8, 'value': 5, 'src': '153:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 23, 'node_id': 21, 'end_col_offset': 24, 'end_lineno': 8, 'value': 2, 'src': '155:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 25, 'node_id': 22, 'end_col_offset': 27, 'end_lineno': 8, 'value': 10, 'src': '157:2:0', 'ast_type': 'Int', 'lineno': 8}], 'ast_type': 'List', 'lineno': 8}, 'src': '140:20:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 17, 'end_col_offset': 17, 'end_lineno': 8, 'src': '143:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 8}, 'target': {'col_offset': 8, 'node_id': 15, 'end_col_offset': 9, 'end_lineno': 8, 'src': '140:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 8}}
get_variables
{'lineno': 8, 'node_id': 14, 'col_offset': 8, 'end_col_offset': 28, 'end_lineno': 8, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 19, 'end_col_offset': 28, 'end_lineno': 8, 'src': '152:8:0', 'elements': [{'col_offset': 21, 'node_id': 20, 'end_col_offset': 22, 'end_lineno': 8, 'value': 5, 'src': '153:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 23, 'node_id': 21, 'end_col_offset': 24, 'end_lineno': 8, 'value': 2, 'src': '155:1:0', 'ast_type': 'Int', 'lineno': 8}, {'col_offset': 25, 'node_id': 22, 'end_col_offset': 27, 'end_lineno': 8, 'value': 10, 'src': '157:2:0', 'ast_type': 'Int', 'lineno': 8}], 'ast_type': 'List', 'lineno': 8}, 'src': '140:20:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 17, 'end_col_offset': 17, 'end_lineno': 8, 'src': '143:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 8}, 'target': {'col_offset': 8, 'node_id': 15, 'end_col_offset': 9, 'end_lineno': 8, 'src': '140:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 8}}
getfullname
{'col_offset': 8, 'node_id': 15, 'end_col_offset': 9, 'end_lineno': 8, 'src': '140:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 8}
boh
fff
a
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2'}
end loop
in loop
{'lineno': 9, 'node_id': 24, 'col_offset': 8, 'end_col_offset': 21, 'end_lineno': 9, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 29, 'end_col_offset': 21, 'end_lineno': 9, 'value': 1, 'src': '181:1:0', 'ast_type': 'Int', 'lineno': 9}, 'src': '169:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 27, 'end_col_offset': 17, 'end_lineno': 9, 'src': '172:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 9}, 'target': {'col_offset': 8, 'node_id': 25, 'end_col_offset': 9, 'end_lineno': 9, 'src': '169:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 9}}
get_variables
{'lineno': 9, 'node_id': 24, 'col_offset': 8, 'end_col_offset': 21, 'end_lineno': 9, 'simple': 1, 'value': {'col_offset': 20, 'node_id': 29, 'end_col_offset': 21, 'end_lineno': 9, 'value': 1, 'src': '181:1:0', 'ast_type': 'Int', 'lineno': 9}, 'src': '169:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 11, 'node_id': 27, 'end_col_offset': 17, 'end_lineno': 9, 'src': '172:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 9}, 'target': {'col_offset': 8, 'node_id': 25, 'end_col_offset': 9, 'end_lineno': 9, 'src': '169:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 9}}
getfullname
{'col_offset': 8, 'node_id': 25, 'end_col_offset': 9, 'end_lineno': 9, 'src': '169:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 9}
boh
fff
c
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c'}
end loop
in loop
{'col_offset': 8, 'node_id': 30, 'end_col_offset': 22, 'end_lineno': 20, 'src': '191:374:0', 'test': {'op': {'col_offset': 14, 'node_id': 68, 'end_lineno': 10, 'end_col_offset': 20, 'src': '197:6:0', 'ast_type': 'Lt', 'lineno': 10}, 'node_id': 31, 'col_offset': 14, 'end_col_offset': 20, 'end_lineno': 10, 'src': '197:6:0', 'ast_type': 'Compare', 'right': {'col_offset': 18, 'node_id': 35, 'end_col_offset': 20, 'end_lineno': 10, 'value': 10, 'src': '201:2:0', 'ast_type': 'Int', 'lineno': 10}, 'lineno': 10, 'left': {'col_offset': 14, 'node_id': 32, 'end_col_offset': 15, 'end_lineno': 10, 'src': '197:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 10}}, 'ast_type': 'While', 'body': [{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}], 'lineno': 10}
get_variables
{'col_offset': 8, 'node_id': 30, 'end_col_offset': 22, 'end_lineno': 20, 'src': '191:374:0', 'test': {'op': {'col_offset': 14, 'node_id': 68, 'end_lineno': 10, 'end_col_offset': 20, 'src': '197:6:0', 'ast_type': 'Lt', 'lineno': 10}, 'node_id': 31, 'col_offset': 14, 'end_col_offset': 20, 'end_lineno': 10, 'src': '197:6:0', 'ast_type': 'Compare', 'right': {'col_offset': 18, 'node_id': 35, 'end_col_offset': 20, 'end_lineno': 10, 'value': 10, 'src': '201:2:0', 'ast_type': 'Int', 'lineno': 10}, 'lineno': 10, 'left': {'col_offset': 14, 'node_id': 32, 'end_col_offset': 15, 'end_lineno': 10, 'src': '197:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 10}}, 'ast_type': 'While', 'body': [{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}], 'lineno': 10}
get_variables
[{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}]
in loop
{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}
get_variables
{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}
getfullname
{'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}
boh
fff
i
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i'}
end loop
in loop
{'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}
get_variables
{'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}
getfullname
{'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}
boh
fff
b
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b'}
end loop
in loop
{'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}
get_variables
{'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}
get_variables
[{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}]
in loop
{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}
get_variables
{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}
get_variables
[{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}]
in loop
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
get_variables
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
getfullname
{'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}
boh
fff
tmp
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
end loop
in loop
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
get_variables
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
getfullname
{'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}
getfullname
{'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}
boh
fff
a_e(i)
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)'}
end loop
in loop
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
get_variables
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
boh
fff
a_e(b)
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
in loop
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
get_variables
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
get_variables
[]
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
in loop
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
get_variables
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
in loop
{'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}
get_variables
{'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
end loop
ret var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
out get var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'col_offset': 8, 'node_id': 30, 'end_col_offset': 22, 'end_lineno': 20, 'src': '191:374:0', 'test': {'op': {'col_offset': 14, 'node_id': 68, 'end_lineno': 10, 'end_col_offset': 20, 'src': '197:6:0', 'ast_type': 'Lt', 'lineno': 10}, 'node_id': 31, 'col_offset': 14, 'end_col_offset': 20, 'end_lineno': 10, 'src': '197:6:0', 'ast_type': 'Compare', 'right': {'col_offset': 18, 'node_id': 35, 'end_col_offset': 20, 'end_lineno': 10, 'value': 10, 'src': '201:2:0', 'ast_type': 'Int', 'lineno': 10}, 'lineno': 10, 'left': {'col_offset': 14, 'node_id': 32, 'end_col_offset': 15, 'end_lineno': 10, 'src': '197:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 10}}, 'ast_type': 'While', 'body': [{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}], 'lineno': 10}
c >= 10
c >= 1
strtosympy
v00
v00
rule
v00
new_name2
l2
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
[{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}, {'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}, {'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}, {'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}
get_expr
{'lineno': 11, 'node_id': 36, 'col_offset': 16, 'end_col_offset': 31, 'end_lineno': 11, 'simple': 1, 'value': {'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}, 'src': '221:15:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 39, 'end_col_offset': 25, 'end_lineno': 11, 'src': '224:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 11}, 'target': {'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
here1
getfullname
{'col_offset': 16, 'node_id': 37, 'end_col_offset': 17, 'end_lineno': 11, 'src': '221:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 11}
here2
normal
get_expr
{'op': {'col_offset': 28, 'node_id': 121, 'end_lineno': 11, 'end_col_offset': 31, 'src': '233:3:0', 'ast_type': 'Sub', 'lineno': 11}, 'node_id': 41, 'col_offset': 28, 'end_col_offset': 31, 'end_lineno': 11, 'src': '233:3:0', 'ast_type': 'BinOp', 'right': {'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}, 'lineno': 11, 'left': {'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
get_expr
{'col_offset': 28, 'node_id': 42, 'end_col_offset': 29, 'end_lineno': 11, 'src': '233:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 11}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
get_expr
{'col_offset': 30, 'node_id': 45, 'end_col_offset': 31, 'end_lineno': 11, 'value': 1, 'src': '235:1:0', 'ast_type': 'Int', 'lineno': 11}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}
get_expr
{'lineno': 12, 'node_id': 46, 'col_offset': 16, 'end_col_offset': 29, 'end_lineno': 12, 'simple': 1, 'value': {'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}, 'src': '253:13:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 19, 'node_id': 49, 'end_col_offset': 25, 'end_lineno': 12, 'src': '256:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 12}, 'target': {'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
here1
getfullname
{'col_offset': 16, 'node_id': 47, 'end_col_offset': 17, 'end_lineno': 12, 'src': '253:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 12}
here2
normal
get_expr
{'col_offset': 28, 'node_id': 51, 'end_col_offset': 29, 'end_lineno': 12, 'src': '265:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 12}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'c', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}
i < 0
i < 
strtosympy
v00
v00
rule
v00
new_name
l4
l5
l6
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
[{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}
this is if
getfullname
{'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}
getfullname
{'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}
getfullname
{'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}
getfullname
{'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}
getfullname
{'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}
getfullname
{'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}
getfullname
{'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}
getfullname
{'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
[{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
get_expr
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
here1
getfullname
{'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}
here2
normal
get_expr
{'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
getfullname
{'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}
getfullname
{'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}
getfullname
{'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}
getfullname
{'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}
boh
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
get_expr
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
here1
getfullname
{'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}
getfullname
{'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
getfullname
{'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}
getfullname
{'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}
getfullname
{'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}
getfullname
{'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}
boh
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
get_expr
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}]
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
get_expr
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
aug
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
a_e(b) >= a_e(i)
a_e
b
 >= a_e
i
strtosympy
v0(v1) >= v0(v3)
v0(v1) >= v0(v3)
rule
v0(v1) >= v0(v3)
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
get_expr
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
aug
getfullname
{'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}
boh
get_expr
{'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
get_expr
{'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i-1', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
ch list8
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
new_stname
l8
i < 0
i < 
strtosympy
v00
v00
rule
v00
ch list11
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'])
{'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}
get_expr
{'lineno': 20, 'op': {'col_offset': 16, 'node_id': 126, 'end_lineno': 20, 'end_col_offset': 22, 'src': '559:6:0', 'ast_type': 'Add', 'lineno': 20}, 'node_id': 123, 'col_offset': 16, 'end_col_offset': 22, 'end_lineno': 20, 'value': {'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}, 'src': '559:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'c', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
aug
getfullname
{'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}
boh
get_expr
{'col_offset': 16, 'node_id': 124, 'end_col_offset': 17, 'end_lineno': 20, 'src': '559:1:0', 'ast_type': 'Name', 'id': 'c', 'lineno': 20}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'c', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
get_expr
{'col_offset': 21, 'node_id': 127, 'end_col_offset': 22, 'end_lineno': 20, 'value': 1, 'src': '564:1:0', 'ast_type': 'Int', 'lineno': 20}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'c-1', 'b': 'c', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c+1', 'i': 'c-1', 'b': 'c', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}]
ch list8
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c+1', 'c-1', 'c', 'tmp', 'a_e(i)', 'a_e(b)']
new_stname
l9
c >= 10
c >= 1
strtosympy
v00
v00
rule
v00
ch list11
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
check
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp', 'a_e(i)': 'a_e(i)', 'a_e(b)': 'a_e(b)'}
{'l0': [['l1', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['c < 10']], ['l10', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['c >= 10']]], 'l1': [['l2', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['c < 10']], ['l3', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['c >= 10']], ['l10', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['c >= 10']]], 'l2': [['l4', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'c-1', 'c', 'tmp', 'a_e(i)', 'a_e(b)'], ['i >= 0']], ['l9', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['i < 0']]], 'l4': [['l5', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['i >= 0']], ['l6', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['i < 0']], ['l9', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['i < 0']]], 'l5': [['l7', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['a_e(b) < a_e(i)']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['a_e(b) >= a_e(i)']]], 'l7': [['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']]], 'l8': [['l4', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp', 'a_e(i)', 'a_e(b)'], ['i >= 0']]], 'l9': [['l1', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c+1', 'c-1', 'c', 'tmp', 'a_e(i)', 'a_e(b)'], ['c < 10']]]}
in parse_list
variabless
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'c-1', 'c', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'c-1', 'c', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c+1', 'c-1', 'c', 'tmp', 'a_e(i)', 'a_e(b)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c+1', 'c-1', 'c', 'tmp']
check2
{'l0': [['l1', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['c < 10']], ['l10', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['c >= 10']]], 'l1': [['l2', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['c < 10']], ['l3', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['c >= 10']], ['l10', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['c >= 10']]], 'l2': [['l4', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'c-1', 'c', 'tmp'], ['i >= 0']], ['l9', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l4': [['l5', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i >= 0']], ['l6', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']], ['l9', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l5': [['l7', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) < a_e(i)']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) >= a_e(i)']]], 'l7': [['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l8', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']]], 'l8': [['l4', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp'], ['i >= 0']]], 'l9': [['l1', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c+1', 'c-1', 'c', 'tmp'], ['c < 10']]]}
in for
while
parenthesis
c < 10
in for
while
parenthesis
c >= 10
in for
while
parenthesis
c < 10
in for
while
parenthesis
c >= 10
in for
while
parenthesis
c >= 10
in for
while
parenthesis
i >= 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
i >= 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
a_e(b) < a_e(i)
in for
while
parenthesis
a_e(b) >= a_e(i)
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
i >= 0
in for
while
parenthesis
c < 10
source init
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 a a_e0 a_e1 a_e2 c i b tmp a_e(i) a_e(b))
(RULES
l0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c < 10
l0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l10(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10
l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c < 10
l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l3(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10
l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l10(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10
l2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,c-1,c,tmp)) :|: i >= 0
l2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0
l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l6(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) < a_e(i)
l5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) >= a_e(i)
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i-1,b,tmp)) :|: i >= 0
l9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c+1,c-1,c,tmp)) :|: c < 10
)
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'col_offset': 16, 'node_id': 53, 'end_col_offset': 30, 'end_lineno': 19, 'src': '283:259:0', 'test': {'op': {'col_offset': 22, 'node_id': 57, 'end_lineno': 13, 'end_col_offset': 26, 'src': '289:4:0', 'ast_type': 'GtE', 'lineno': 13}, 'node_id': 54, 'col_offset': 22, 'end_col_offset': 26, 'end_lineno': 13, 'src': '289:4:0', 'ast_type': 'Compare', 'right': {'col_offset': 25, 'node_id': 58, 'end_col_offset': 26, 'end_lineno': 13, 'value': 0, 'src': '292:1:0', 'ast_type': 'Int', 'lineno': 13}, 'lineno': 13, 'left': {'col_offset': 22, 'node_id': 55, 'end_col_offset': 23, 'end_lineno': 13, 'src': '289:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 13}}, 'ast_type': 'While', 'body': [{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}], 'lineno': 13}
i < 0
i < 
strtosympy
v00
v00
rule
v00
new_name2
l12
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
[{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}, {'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'node_id': 59, 'orelse': [], 'col_offset': 24, 'end_col_offset': 38, 'end_lineno': 18, 'src': '319:192:0', 'test': {'op': {'col_offset': 27, 'node_id': 68, 'end_lineno': 14, 'end_col_offset': 38, 'src': '322:11:0', 'ast_type': 'Lt', 'lineno': 14}, 'node_id': 60, 'col_offset': 27, 'end_col_offset': 38, 'end_lineno': 14, 'src': '322:11:0', 'ast_type': 'Compare', 'right': {'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}, 'lineno': 14, 'left': {'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}}, 'ast_type': 'If', 'body': [{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}], 'lineno': 14}
this is if
getfullname
{'col_offset': 27, 'node_id': 61, 'end_col_offset': 31, 'end_lineno': 14, 'slice': {'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '322:4:0', 'ast_type': 'Subscript', 'lineno': 14}
getfullname
{'col_offset': 27, 'node_id': 62, 'end_col_offset': 28, 'end_lineno': 14, 'src': '322:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}
getfullname
{'col_offset': 29, 'node_id': 64, 'end_col_offset': 30, 'end_lineno': 14, 'value': {'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}, 'src': '324:1:0', 'ast_type': 'Index', 'lineno': 14}
getfullname
{'col_offset': 29, 'node_id': 65, 'end_col_offset': 30, 'end_lineno': 14, 'src': '324:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 14}
getfullname
{'col_offset': 34, 'node_id': 69, 'end_col_offset': 38, 'end_lineno': 14, 'slice': {'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}, 'value': {'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}, 'src': '329:4:0', 'ast_type': 'Subscript', 'lineno': 14}
getfullname
{'col_offset': 34, 'node_id': 70, 'end_col_offset': 35, 'end_lineno': 14, 'src': '329:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 14}
getfullname
{'col_offset': 36, 'node_id': 72, 'end_col_offset': 37, 'end_lineno': 14, 'value': {'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}, 'src': '331:1:0', 'ast_type': 'Index', 'lineno': 14}
getfullname
{'col_offset': 36, 'node_id': 73, 'end_col_offset': 37, 'end_lineno': 14, 'src': '331:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 14}
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
[{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}, {'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}, {'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}, {'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
get_expr
{'lineno': 15, 'node_id': 76, 'col_offset': 32, 'end_col_offset': 50, 'end_lineno': 15, 'simple': 1, 'value': {'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}, 'src': '367:18:0', 'ast_type': 'AnnAssign', 'annotation': {'col_offset': 37, 'node_id': 79, 'end_col_offset': 43, 'end_lineno': 15, 'src': '372:6:0', 'ast_type': 'Name', 'id': 'int128', 'lineno': 15}, 'target': {'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
here1
getfullname
{'col_offset': 32, 'node_id': 77, 'end_col_offset': 35, 'end_lineno': 15, 'src': '367:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 15}
here2
normal
get_expr
{'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
getfullname
{'col_offset': 46, 'node_id': 81, 'end_col_offset': 50, 'end_lineno': 15, 'slice': {'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}, 'value': {'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}, 'src': '381:4:0', 'ast_type': 'Subscript', 'lineno': 15}
getfullname
{'col_offset': 46, 'node_id': 82, 'end_col_offset': 47, 'end_lineno': 15, 'src': '381:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 15}
getfullname
{'col_offset': 48, 'node_id': 84, 'end_col_offset': 49, 'end_lineno': 15, 'value': {'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}, 'src': '383:1:0', 'ast_type': 'Index', 'lineno': 15}
getfullname
{'col_offset': 48, 'node_id': 85, 'end_col_offset': 49, 'end_lineno': 15, 'src': '383:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 15}
boh
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
get_expr
{'lineno': 16, 'col_offset': 32, 'node_id': 88, 'end_col_offset': 43, 'end_lineno': 16, 'value': {'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}, 'src': '418:11:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)'}]
here1
getfullname
{'col_offset': 32, 'node_id': 89, 'end_col_offset': 36, 'end_lineno': 16, 'slice': {'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '418:4:0', 'ast_type': 'Subscript', 'lineno': 16}
getfullname
{'col_offset': 32, 'node_id': 90, 'end_col_offset': 33, 'end_lineno': 16, 'src': '418:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 92, 'end_col_offset': 35, 'end_lineno': 16, 'value': {'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}, 'src': '420:1:0', 'ast_type': 'Index', 'lineno': 16}
getfullname
{'col_offset': 34, 'node_id': 93, 'end_col_offset': 35, 'end_lineno': 16, 'src': '420:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 16}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(i)'}
getfullname
{'col_offset': 39, 'node_id': 96, 'end_col_offset': 43, 'end_lineno': 16, 'slice': {'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}, 'value': {'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}, 'src': '425:4:0', 'ast_type': 'Subscript', 'lineno': 16}
getfullname
{'col_offset': 39, 'node_id': 97, 'end_col_offset': 40, 'end_lineno': 16, 'src': '425:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 16}
getfullname
{'col_offset': 41, 'node_id': 99, 'end_col_offset': 42, 'end_lineno': 16, 'value': {'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}, 'src': '427:1:0', 'ast_type': 'Index', 'lineno': 16}
getfullname
{'col_offset': 41, 'node_id': 100, 'end_col_offset': 42, 'end_lineno': 16, 'src': '427:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 16}
boh
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
get_expr
{'lineno': 17, 'col_offset': 32, 'node_id': 103, 'end_col_offset': 42, 'end_lineno': 17, 'value': {'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}, 'src': '462:10:0', 'ast_type': 'Assign', 'target': {'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}]
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
here1
getfullname
{'col_offset': 32, 'node_id': 104, 'end_col_offset': 36, 'end_lineno': 17, 'slice': {'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}, 'value': {'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}, 'src': '462:4:0', 'ast_type': 'Subscript', 'lineno': 17}
getfullname
{'col_offset': 32, 'node_id': 105, 'end_col_offset': 33, 'end_lineno': 17, 'src': '462:1:0', 'ast_type': 'Name', 'id': 'a', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 107, 'end_col_offset': 35, 'end_lineno': 17, 'value': {'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}, 'src': '464:1:0', 'ast_type': 'Index', 'lineno': 17}
getfullname
{'col_offset': 34, 'node_id': 108, 'end_col_offset': 35, 'end_lineno': 17, 'src': '464:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 17}
here2
normal
get_expr
{'col_offset': 39, 'node_id': 111, 'end_col_offset': 42, 'end_lineno': 17, 'src': '469:3:0', 'ast_type': 'Name', 'id': 'tmp', 'lineno': 17}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(b)'}
im here
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
get_expr
{'lineno': 18, 'op': {'col_offset': 32, 'node_id': 121, 'end_lineno': 18, 'end_col_offset': 38, 'src': '505:6:0', 'ast_type': 'Sub', 'lineno': 18}, 'node_id': 113, 'col_offset': 32, 'end_col_offset': 38, 'end_lineno': 18, 'value': {'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}, 'src': '505:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}}
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
aug
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
getfullname
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
boh
get_expr
{'col_offset': 32, 'node_id': 114, 'end_col_offset': 33, 'end_lineno': 18, 'src': '505:1:0', 'ast_type': 'Name', 'id': 'b', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
get_expr
{'col_offset': 37, 'node_id': 117, 'end_col_offset': 38, 'end_lineno': 18, 'value': 1, 'src': '510:1:0', 'ast_type': 'Int', 'lineno': 18}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(b)', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e(b)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(b)', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e(i)', 'a_e1': 'a_e1', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e(i)', 'a_e2': 'a_e(b)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}, {'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e(i)', 'c': 'c', 'i': 'i', 'b': 'b-1', 'tmp': 'a_e(i)', 'a_e(i)': 'a_e(b)', 'a_e(b)': 'a_e(i)'}]
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
ch list2
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
a_e(b) >= a_e(i)
a_e
b
 >= a_e
i
strtosympy
v0(v1) >= v0(v3)
v0(v1) >= v0(v3)
rule
v0(v1) >= v0(v3)
base_vars
dict_values(['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'])
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
get_expr
{'lineno': 19, 'op': {'col_offset': 24, 'node_id': 121, 'end_lineno': 19, 'end_col_offset': 30, 'src': '536:6:0', 'ast_type': 'Sub', 'lineno': 19}, 'node_id': 118, 'col_offset': 24, 'end_col_offset': 30, 'end_lineno': 19, 'value': {'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}, 'src': '536:6:0', 'ast_type': 'AugAssign', 'target': {'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
aug
getfullname
{'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}
boh
get_expr
{'col_offset': 24, 'node_id': 119, 'end_col_offset': 25, 'end_lineno': 19, 'src': '536:1:0', 'ast_type': 'Name', 'id': 'i', 'lineno': 19}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
get_expr
{'col_offset': 29, 'node_id': 122, 'end_col_offset': 30, 'end_lineno': 19, 'value': 1, 'src': '541:1:0', 'ast_type': 'Int', 'lineno': 19}
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
back
[{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i-1', 'b': 'b', 'tmp': 'tmp'}]
ch list8
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp']
new_stname
l15
i < 0
i < 
strtosympy
v00
v00
rule
v00
ch list11
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
check
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
{'l0': [['l11', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i >= 0']], ['l16', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l11': [['l12', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i >= 0']], ['l13', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']], ['l16', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l12': [['l14', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) < a_e(i)']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) >= a_e(i)']]], 'l14': [['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)'], ['TRUE']]], 'l15': [['l11', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp'], ['i >= 0']]]}
in parse_list
variabless
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp']
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['b']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)', 'a_e(b)', 'a_e(i)']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)']
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
in add_list
outr
['a', '2']
a_e2
[2]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
outr
['a', '1']
a_e1
[1]
['i']
['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']]
outr2
g[i]
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp']
var
{'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'a': 'a', 'a_e0': 'a_e0', 'a_e1': 'a_e1', 'a_e2': 'a_e2', 'c': 'c', 'i': 'i', 'b': 'b', 'tmp': 'tmp'}
varse
['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp']
check2
{'l0': [['l11', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i >= 0']], ['l16', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l11': [['l12', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i >= 0']], ['l13', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']], ['l16', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['i < 0']]], 'l12': [['l14', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) < a_e(i)']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b', 'tmp'], ['a_e(b) >= a_e(i)']]], 'l14': [['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(b)', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(b)', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e2', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e1', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e(i)', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e2', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(b)', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=2', 'b>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'b<=1', 'b>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e(i)', 'a_e(b)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e1', 'c', 'i', 'b-1', 'a_e(i)'], ['TRUE', 'i<=1', 'i>=1']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e2'], ['TRUE', 'i<=2', 'i>=2']], ['l15', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e(i)', 'c', 'i', 'b-1', 'a_e1'], ['TRUE', 'i<=1', 'i>=1']]], 'l15': [['l11', ['block.coinbase', 'block.difficulty', 'block.number', 'block.prevhash', 'block.timestamp', 'chain.id', 'msg.gas', 'msg.sender', 'msg.value', 'tx.origin', 'self.balance', 'ZERO_ADDRESS', 'EMPTY_BYTES32', 'MAX_INT128', 'MIN_INT128', 'MAX_DECIMAL', 'MIN_DECIMAL', 'MAX_UINT256', 'a', 'a_e0', 'a_e1', 'a_e2', 'c', 'i-1', 'b', 'tmp'], ['i >= 0']]]}
in for
while
parenthesis
i >= 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
i >= 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
i < 0
in for
while
parenthesis
a_e(b) < a_e(i)
in for
while
parenthesis
a_e(b) >= a_e(i)
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && b<=2 && b>=2
in for
while
parenthesis
TRUE && b<=1 && b>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
TRUE && i<=2 && i>=2
in for
while
parenthesis
TRUE && i<=1 && i>=1
in for
while
parenthesis
i >= 0
source init
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 a a_e0 a_e1 a_e2 c i b tmp)
(RULES
l0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0
l0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l16(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0
l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l13(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l16(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0
l12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) < a_e(i)
l12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) >= a_e(i)
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2
l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1
l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i-1,b,tmp)) :|: i >= 0
)
[{30: '(GOAL COMPLEXITY)\n(STARTTERM (FUNCTIONSYMBOLS l0))\n(VAR block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 a a_e0 a_e1 a_e2 c i b tmp a_e(i) a_e(b))\n(RULES\nl0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c < 10\nl0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l10(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10\nl1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c < 10\nl1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l3(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10\nl1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l10(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: c >= 10\nl2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,c-1,c,tmp)) :|: i >= 0\nl2(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0\nl4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l6(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) < a_e(i)\nl5(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) >= a_e(i)\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl7(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl8(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l4(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i-1,b,tmp)) :|: i >= 0\nl9(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp,a_e(i),a_e(b)) -> Com_1(l1(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c+1,c-1,c,tmp)) :|: c < 10\n)', 53: '(GOAL COMPLEXITY)\n(STARTTERM (FUNCTIONSYMBOLS l0))\n(VAR block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 a a_e0 a_e1 a_e2 c i b tmp)\n(RULES\nl0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0\nl0(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l16(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i >= 0\nl11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l13(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l16(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: i < 0\nl12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) < a_e(i)\nl12(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp)) :|: a_e(b) >= a_e(i)\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(b),a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e(b),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(b),a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e2,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e1,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e(i),a_e1,a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e2,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(b),c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e2,c,i,b-1,a_e(i))) :|: TRUE && b<=2 && b>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e1,c,i,b-1,a_e(i))) :|: TRUE && b<=1 && b>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e(i),a_e(b),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b-1,a_e(i))) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e1,c,i,b-1,a_e(i))) :|: TRUE && i<=1 && i>=1\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e2)) :|: TRUE && i<=2 && i>=2\nl14(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e(i),c,i,b-1,a_e1)) :|: TRUE && i<=1 && i>=1\nl15(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i,b,tmp) -> Com_1(l11(block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,a,a_e0,a_e1,a_e2,c,i-1,b,tmp)) :|: i >= 0\n)'}]
b''
b''
None
None
