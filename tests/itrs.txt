for
{'end_lineno': 32, 'node_id': 93, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 29, 'end_col_offset': 10, 'target': {'end_lineno': 29, 'node_id': 94, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 29, 'end_col_offset': 13, 'attr': 'bids', 'src': '715:9:0', 'value': {'end_lineno': 29, 'node_id': 95, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 29, 'end_col_offset': 8, 'src': '715:4:0'}}, 'src': '715:62:0', 'value': {'end_lineno': 32, 'func': {'end_lineno': 29, 'node_id': 99, 'id': 'very', 'col_offset': 16, 'ast_type': 'Name', 'lineno': 29, 'end_col_offset': 20, 'src': '727:4:0'}, 'node_id': 98, 'ast_type': 'Call', 'keywords': [], 'col_offset': 16, 'lineno': 29, 'end_col_offset': 10, 'args': [{'end_lineno': 32, 'node_id': 101, 'ast_type': 'Dict', 'col_offset': 21, 'keys': [{'end_lineno': 30, 'node_id': 102, 'id': 'vals', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 30, 'end_col_offset': 12, 'src': '742:4:0'}, {'end_lineno': 31, 'node_id': 104, 'id': 'vap', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 31, 'end_col_offset': 11, 'src': '760:3:0'}], 'lineno': 29, 'values': [{'end_lineno': 30, 'node_id': 106, 'col_offset': 14, 'ast_type': 'Int', 'lineno': 30, 'end_col_offset': 16, 'src': '748:2:0', 'value': 10}, {'end_lineno': 31, 'node_id': 107, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 31, 'end_col_offset': 14, 'src': '765:1:0', 'value': 4}], 'end_col_offset': 9, 'src': '732:44:0'}], 'src': '727:50:0', 'keyword': None}}
for
{'end_lineno': 34, 'node_id': 108, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 34, 'end_col_offset': 35, 'target': {'end_lineno': 34, 'node_id': 109, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 34, 'end_col_offset': 20, 'attr': 'beneficiary', 'src': '787:16:0', 'value': {'end_lineno': 34, 'node_id': 110, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 34, 'end_col_offset': 8, 'src': '787:4:0'}}, 'src': '787:31:0', 'value': {'end_lineno': 34, 'node_id': 113, 'id': '_beneficiary', 'col_offset': 23, 'ast_type': 'Name', 'lineno': 34, 'end_col_offset': 35, 'src': '806:12:0'}}
normal
{'end_lineno': 34, 'node_id': 108, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 34, 'end_col_offset': 35, 'target': {'end_lineno': 34, 'node_id': 109, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 34, 'end_col_offset': 20, 'attr': 'beneficiary', 'src': '787:16:0', 'value': {'end_lineno': 34, 'node_id': 110, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 34, 'end_col_offset': 8, 'src': '787:4:0'}}, 'src': '787:31:0', 'value': {'end_lineno': 34, 'node_id': 113, 'id': '_beneficiary', 'col_offset': 23, 'ast_type': 'Name', 'lineno': 34, 'end_col_offset': 35, 'src': '806:12:0'}}
for
{'end_lineno': 35, 'node_id': 115, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 35, 'end_col_offset': 39, 'target': {'end_lineno': 35, 'node_id': 116, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 35, 'end_col_offset': 21, 'attr': 'auctionStart', 'src': '823:17:0', 'value': {'end_lineno': 35, 'node_id': 117, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 35, 'end_col_offset': 8, 'src': '823:4:0'}}, 'src': '823:35:0', 'value': {'end_lineno': 35, 'node_id': 120, 'ast_type': 'Attribute', 'col_offset': 24, 'lineno': 35, 'end_col_offset': 39, 'attr': 'timestamp', 'src': '843:15:0', 'value': {'end_lineno': 35, 'node_id': 121, 'id': 'block', 'col_offset': 24, 'ast_type': 'Name', 'lineno': 35, 'end_col_offset': 29, 'src': '843:5:0'}}}
normal
{'end_lineno': 35, 'node_id': 115, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 35, 'end_col_offset': 39, 'target': {'end_lineno': 35, 'node_id': 116, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 35, 'end_col_offset': 21, 'attr': 'auctionStart', 'src': '823:17:0', 'value': {'end_lineno': 35, 'node_id': 117, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 35, 'end_col_offset': 8, 'src': '823:4:0'}}, 'src': '823:35:0', 'value': {'end_lineno': 35, 'node_id': 120, 'ast_type': 'Attribute', 'col_offset': 24, 'lineno': 35, 'end_col_offset': 39, 'attr': 'timestamp', 'src': '843:15:0', 'value': {'end_lineno': 35, 'node_id': 121, 'id': 'block', 'col_offset': 24, 'ast_type': 'Name', 'lineno': 35, 'end_col_offset': 29, 'src': '843:5:0'}}}
for
{'end_lineno': 36, 'node_id': 124, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 36, 'end_col_offset': 55, 'target': {'end_lineno': 36, 'node_id': 125, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 36, 'end_col_offset': 19, 'attr': 'auctionEnd', 'src': '863:15:0', 'value': {'end_lineno': 36, 'node_id': 126, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 8, 'src': '863:4:0'}}, 'src': '863:51:0', 'value': {'end_lineno': 36, 'node_id': 129, 'right': {'end_lineno': 36, 'node_id': 135, 'id': '_bidding_time', 'col_offset': 42, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 55, 'src': '901:13:0'}, 'ast_type': 'BinOp', 'col_offset': 22, 'left': {'end_lineno': 36, 'node_id': 130, 'ast_type': 'Attribute', 'col_offset': 22, 'lineno': 36, 'end_col_offset': 39, 'attr': 'auctionStart', 'src': '881:17:0', 'value': {'end_lineno': 36, 'node_id': 131, 'id': 'self', 'col_offset': 22, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 26, 'src': '881:4:0'}}, 'op': {'end_lineno': 36, 'node_id': 134, 'col_offset': 22, 'ast_type': 'Add', 'lineno': 36, 'end_col_offset': 55, 'src': '881:33:0'}, 'lineno': 36, 'end_col_offset': 55, 'src': '881:33:0'}}
normal
{'end_lineno': 36, 'node_id': 124, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 36, 'end_col_offset': 55, 'target': {'end_lineno': 36, 'node_id': 125, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 36, 'end_col_offset': 19, 'attr': 'auctionEnd', 'src': '863:15:0', 'value': {'end_lineno': 36, 'node_id': 126, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 8, 'src': '863:4:0'}}, 'src': '863:51:0', 'value': {'end_lineno': 36, 'node_id': 129, 'right': {'end_lineno': 36, 'node_id': 135, 'id': '_bidding_time', 'col_offset': 42, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 55, 'src': '901:13:0'}, 'ast_type': 'BinOp', 'col_offset': 22, 'left': {'end_lineno': 36, 'node_id': 130, 'ast_type': 'Attribute', 'col_offset': 22, 'lineno': 36, 'end_col_offset': 39, 'attr': 'auctionStart', 'src': '881:17:0', 'value': {'end_lineno': 36, 'node_id': 131, 'id': 'self', 'col_offset': 22, 'ast_type': 'Name', 'lineno': 36, 'end_col_offset': 26, 'src': '881:4:0'}}, 'op': {'end_lineno': 36, 'node_id': 134, 'col_offset': 22, 'ast_type': 'Add', 'lineno': 36, 'end_col_offset': 55, 'src': '881:33:0'}, 'lineno': 36, 'end_col_offset': 55, 'src': '881:33:0'}}
for
{'end_lineno': 37, 'node_id': 137, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 37, 'end_col_offset': 17, 'annotation': {'end_lineno': 37, 'node_id': 140, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 37, 'end_col_offset': 13, 'src': '922:6:0'}, 'target': {'end_lineno': 37, 'node_id': 138, 'id': 'x', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 37, 'end_col_offset': 5, 'src': '919:1:0'}, 'src': '919:13:0', 'value': {'end_lineno': 37, 'node_id': 142, 'col_offset': 16, 'ast_type': 'Int', 'lineno': 37, 'end_col_offset': 17, 'src': '931:1:0', 'value': 8}}
normal
{'end_lineno': 37, 'node_id': 137, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 37, 'end_col_offset': 17, 'annotation': {'end_lineno': 37, 'node_id': 140, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 37, 'end_col_offset': 13, 'src': '922:6:0'}, 'target': {'end_lineno': 37, 'node_id': 138, 'id': 'x', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 37, 'end_col_offset': 5, 'src': '919:1:0'}, 'src': '919:13:0', 'value': {'end_lineno': 37, 'node_id': 142, 'col_offset': 16, 'ast_type': 'Int', 'lineno': 37, 'end_col_offset': 17, 'src': '931:1:0', 'value': 8}}
for
{'end_lineno': 39, 'node_id': 143, 'body': [{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}], 'col_offset': 4, 'ast_type': 'While', 'test': {'end_lineno': 38, 'node_id': 144, 'right': {'end_lineno': 38, 'node_id': 148, 'col_offset': 12, 'ast_type': 'Int', 'lineno': 38, 'end_col_offset': 13, 'src': '945:1:0', 'value': 5}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 38, 'node_id': 145, 'id': 'x', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 38, 'end_col_offset': 11, 'src': '943:1:0'}, 'op': {'end_lineno': 38, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}, 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}, 'end_col_offset': 24, 'lineno': 38, 'src': '937:36:0'}
for
{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}
normal
{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}
fine
make_graph
{'end_lineno': 39, 'node_id': 143, 'body': [{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}], 'col_offset': 4, 'ast_type': 'While', 'test': {'end_lineno': 38, 'node_id': 144, 'right': {'end_lineno': 38, 'node_id': 148, 'col_offset': 12, 'ast_type': 'Int', 'lineno': 38, 'end_col_offset': 13, 'src': '945:1:0', 'value': 5}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 38, 'node_id': 145, 'id': 'x', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 38, 'end_col_offset': 11, 'src': '943:1:0'}, 'op': {'end_lineno': 38, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}, 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}, 'end_col_offset': 24, 'lineno': 38, 'src': '937:36:0'}
{'end_lineno': 38, 'node_id': 144, 'right': {'end_lineno': 38, 'node_id': 148, 'col_offset': 12, 'ast_type': 'Int', 'lineno': 38, 'end_col_offset': 13, 'src': '945:1:0', 'value': 5}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 38, 'node_id': 145, 'id': 'x', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 38, 'end_col_offset': 11, 'src': '943:1:0'}, 'op': {'end_lineno': 38, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}, 'lineno': 38, 'end_col_offset': 13, 'src': '943:3:0'}
{'end_lineno': 38, 'node_id': 145, 'id': 'x', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 38, 'end_col_offset': 11, 'src': '943:1:0'}
{'end_lineno': 38, 'node_id': 148, 'col_offset': 12, 'ast_type': 'Int', 'lineno': 38, 'end_col_offset': 13, 'src': '945:1:0', 'value': 5}
make_graph
[{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}]
make_graph
{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}
{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}
ab
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', '_beneficiary': '_beneficiary', '_bidding_time': '_bidding_time', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.bids.vals': 'self.bids.vals', 'self.bids.vap': 'self.bids.vap', 'x': 'x'}
{'end_lineno': 39, 'node_id': 149, 'col_offset': 6, 'ast_type': 'Assign', 'lineno': 39, 'end_col_offset': 24, 'target': {'end_lineno': 39, 'node_id': 150, 'id': 'x', 'col_offset': 6, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 7, 'src': '955:1:0'}, 'src': '955:18:0', 'value': {'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}}
{'end_lineno': 39, 'node_id': 152, 'right': {'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}, 'ast_type': 'BinOp', 'col_offset': 8, 'left': {'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}, 'op': {'end_lineno': 39, 'node_id': 247, 'col_offset': 8, 'ast_type': 'Sub', 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}, 'lineno': 39, 'end_col_offset': 24, 'src': '957:16:0'}
{'end_lineno': 39, 'node_id': 153, 'id': 'x', 'col_offset': 8, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 9, 'src': '957:1:0'}
{'end_lineno': 39, 'node_id': 156, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 24, 'attr': 'vals', 'src': '959:14:0', 'value': {'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}}
{'end_lineno': 39, 'node_id': 157, 'ast_type': 'Attribute', 'col_offset': 10, 'lineno': 39, 'end_col_offset': 19, 'attr': 'bids', 'src': '959:9:0', 'value': {'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}}
{'end_lineno': 39, 'node_id': 158, 'id': 'self', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 39, 'end_col_offset': 14, 'src': '959:4:0'}
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR self.beneficiary self.auctionStart self.auctionEnd self.nani self.highestBidder self.highestBid self.ended self.pendingReturns _beneficiary _bidding_time block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 self.bids.vals self.bids.vap x)
(RULES
	l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: (x > 5)
	l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: !((x > 5))
	l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x-self.bids.vals)) :|: (x > 5)
	l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: !((x > 5))
	)
for
{'end_lineno': 54, 'node_id': 166, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 54, 'end_col_offset': 21, 'target': {'end_lineno': 54, 'node_id': 167, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 54, 'end_col_offset': 13, 'attr': 'nani', 'src': '1446:9:0', 'value': {'end_lineno': 54, 'node_id': 168, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 54, 'end_col_offset': 8, 'src': '1446:4:0'}}, 'src': '1446:17:0', 'value': {'end_lineno': 54, 'node_id': 171, 'col_offset': 16, 'ast_type': 'List', 'lineno': 54, 'end_col_offset': 21, 'elements': [{'end_lineno': 54, 'node_id': 172, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 54, 'end_col_offset': 18, 'src': '1459:1:0', 'value': 2}, {'end_lineno': 54, 'node_id': 173, 'col_offset': 19, 'ast_type': 'Int', 'lineno': 54, 'end_col_offset': 20, 'src': '1461:1:0', 'value': 4}], 'src': '1458:5:0'}}
about list
hey
{'end_lineno': 54, 'node_id': 166, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 54, 'end_col_offset': 21, 'target': {'end_lineno': 54, 'node_id': 167, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 54, 'end_col_offset': 13, 'attr': 'nani', 'src': '1446:9:0', 'value': {'end_lineno': 54, 'node_id': 168, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 54, 'end_col_offset': 8, 'src': '1446:4:0'}}, 'src': '1446:17:0', 'value': {'end_lineno': 54, 'node_id': 171, 'col_offset': 16, 'ast_type': 'List', 'lineno': 54, 'end_col_offset': 21, 'elements': [{'end_lineno': 54, 'node_id': 172, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 54, 'end_col_offset': 18, 'src': '1459:1:0', 'value': 2}, {'end_lineno': 54, 'node_id': 173, 'col_offset': 19, 'ast_type': 'Int', 'lineno': 54, 'end_col_offset': 20, 'src': '1461:1:0', 'value': 4}], 'src': '1458:5:0'}}
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.nani_e0': 'self.nani_e0', 'self.nani_e1': 'self.nani_e1'}
for
{'end_lineno': 55, 'node_id': 175, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 55, 'end_col_offset': 35, 'target': {'end_lineno': 55, 'node_id': 176, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 55, 'end_col_offset': 22, 'attr': 'highestBidder', 'src': '1468:18:0', 'value': {'end_lineno': 55, 'node_id': 177, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 55, 'end_col_offset': 8, 'src': '1468:4:0'}}, 'src': '1468:31:0', 'value': {'end_lineno': 55, 'node_id': 180, 'ast_type': 'Attribute', 'col_offset': 25, 'lineno': 55, 'end_col_offset': 35, 'attr': 'sender', 'src': '1489:10:0', 'value': {'end_lineno': 55, 'node_id': 181, 'id': 'msg', 'col_offset': 25, 'ast_type': 'Name', 'lineno': 55, 'end_col_offset': 28, 'src': '1489:3:0'}}}
normal
{'end_lineno': 55, 'node_id': 175, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 55, 'end_col_offset': 35, 'target': {'end_lineno': 55, 'node_id': 176, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 55, 'end_col_offset': 22, 'attr': 'highestBidder', 'src': '1468:18:0', 'value': {'end_lineno': 55, 'node_id': 177, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 55, 'end_col_offset': 8, 'src': '1468:4:0'}}, 'src': '1468:31:0', 'value': {'end_lineno': 55, 'node_id': 180, 'ast_type': 'Attribute', 'col_offset': 25, 'lineno': 55, 'end_col_offset': 35, 'attr': 'sender', 'src': '1489:10:0', 'value': {'end_lineno': 55, 'node_id': 181, 'id': 'msg', 'col_offset': 25, 'ast_type': 'Name', 'lineno': 55, 'end_col_offset': 28, 'src': '1489:3:0'}}}
for
{'end_lineno': 56, 'node_id': 184, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 56, 'end_col_offset': 31, 'target': {'end_lineno': 56, 'node_id': 185, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 56, 'end_col_offset': 19, 'attr': 'highestBid', 'src': '1504:15:0', 'value': {'end_lineno': 56, 'node_id': 186, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 56, 'end_col_offset': 8, 'src': '1504:4:0'}}, 'src': '1504:27:0', 'value': {'end_lineno': 56, 'node_id': 189, 'ast_type': 'Attribute', 'col_offset': 22, 'lineno': 56, 'end_col_offset': 31, 'attr': 'value', 'src': '1522:9:0', 'value': {'end_lineno': 56, 'node_id': 190, 'id': 'msg', 'col_offset': 22, 'ast_type': 'Name', 'lineno': 56, 'end_col_offset': 25, 'src': '1522:3:0'}}}
normal
{'end_lineno': 56, 'node_id': 184, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 56, 'end_col_offset': 31, 'target': {'end_lineno': 56, 'node_id': 185, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 56, 'end_col_offset': 19, 'attr': 'highestBid', 'src': '1504:15:0', 'value': {'end_lineno': 56, 'node_id': 186, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 56, 'end_col_offset': 8, 'src': '1504:4:0'}}, 'src': '1504:27:0', 'value': {'end_lineno': 56, 'node_id': 189, 'ast_type': 'Attribute', 'col_offset': 22, 'lineno': 56, 'end_col_offset': 31, 'attr': 'value', 'src': '1522:9:0', 'value': {'end_lineno': 56, 'node_id': 190, 'id': 'msg', 'col_offset': 22, 'ast_type': 'Name', 'lineno': 56, 'end_col_offset': 25, 'src': '1522:3:0'}}}
for
{'end_lineno': 57, 'node_id': 193, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 57, 'end_col_offset': 21, 'annotation': {'end_lineno': 57, 'node_id': 196, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 57, 'end_col_offset': 13, 'src': '1539:6:0'}, 'target': {'end_lineno': 57, 'node_id': 194, 'id': 'k', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 57, 'end_col_offset': 5, 'src': '1536:1:0'}, 'src': '1536:17:0', 'value': {'end_lineno': 57, 'node_id': 198, 'col_offset': 16, 'ast_type': 'List', 'lineno': 57, 'end_col_offset': 21, 'elements': [{'end_lineno': 57, 'node_id': 199, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 57, 'end_col_offset': 18, 'src': '1549:1:0', 'value': 2}, {'end_lineno': 57, 'node_id': 200, 'col_offset': 19, 'ast_type': 'Int', 'lineno': 57, 'end_col_offset': 20, 'src': '1551:1:0', 'value': 4}], 'src': '1548:5:0'}}
about list
hey
{'end_lineno': 57, 'node_id': 193, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 57, 'end_col_offset': 21, 'annotation': {'end_lineno': 57, 'node_id': 196, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 57, 'end_col_offset': 13, 'src': '1539:6:0'}, 'target': {'end_lineno': 57, 'node_id': 194, 'id': 'k', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 57, 'end_col_offset': 5, 'src': '1536:1:0'}, 'src': '1536:17:0', 'value': {'end_lineno': 57, 'node_id': 198, 'col_offset': 16, 'ast_type': 'List', 'lineno': 57, 'end_col_offset': 21, 'elements': [{'end_lineno': 57, 'node_id': 199, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 57, 'end_col_offset': 18, 'src': '1549:1:0', 'value': 2}, {'end_lineno': 57, 'node_id': 200, 'col_offset': 19, 'ast_type': 'Int', 'lineno': 57, 'end_col_offset': 20, 'src': '1551:1:0', 'value': 4}], 'src': '1548:5:0'}}
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.nani_e0': 'self.nani_e0', 'self.nani_e1': 'self.nani_e1', 'k_e0': 'k_e0', 'k_e1': 'k_e1'}
for
{'end_lineno': 58, 'node_id': 202, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 58, 'end_col_offset': 17, 'annotation': {'end_lineno': 58, 'node_id': 205, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 58, 'end_col_offset': 13, 'src': '1561:6:0'}, 'target': {'end_lineno': 58, 'node_id': 203, 'id': 'c', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 58, 'end_col_offset': 5, 'src': '1558:1:0'}, 'src': '1558:13:0', 'value': {'end_lineno': 58, 'node_id': 207, 'col_offset': 16, 'ast_type': 'Int', 'lineno': 58, 'end_col_offset': 17, 'src': '1570:1:0', 'value': 1}}
normal
{'end_lineno': 58, 'node_id': 202, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 58, 'end_col_offset': 17, 'annotation': {'end_lineno': 58, 'node_id': 205, 'id': 'int128', 'col_offset': 7, 'ast_type': 'Name', 'lineno': 58, 'end_col_offset': 13, 'src': '1561:6:0'}, 'target': {'end_lineno': 58, 'node_id': 203, 'id': 'c', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 58, 'end_col_offset': 5, 'src': '1558:1:0'}, 'src': '1558:13:0', 'value': {'end_lineno': 58, 'node_id': 207, 'col_offset': 16, 'ast_type': 'Int', 'lineno': 58, 'end_col_offset': 17, 'src': '1570:1:0', 'value': 1}}
for
{'end_lineno': 64, 'node_id': 208, 'body': [{'end_lineno': 64, 'node_id': 217, 'body': [{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}], 'ast_type': 'If', 'col_offset': 7, 'orelse': [{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}], 'test': {'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'end_col_offset': 19, 'lineno': 60, 'src': '1609:105:0'}], 'col_offset': 4, 'ast_type': 'While', 'test': {'end_lineno': 59, 'node_id': 209, 'right': {'end_lineno': 59, 'node_id': 213, 'ast_type': 'Attribute', 'col_offset': 12, 'lineno': 59, 'end_col_offset': 27, 'attr': 'highestBid', 'src': '1584:15:0', 'value': {'end_lineno': 59, 'node_id': 214, 'id': 'self', 'col_offset': 12, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 16, 'src': '1584:4:0'}}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 59, 'node_id': 210, 'id': 'k', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 11, 'src': '1582:1:0'}, 'op': {'end_lineno': 59, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}, 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}, 'end_col_offset': 19, 'lineno': 59, 'src': '1576:138:0'}
for
{'end_lineno': 64, 'node_id': 217, 'body': [{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}], 'ast_type': 'If', 'col_offset': 7, 'orelse': [{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}], 'test': {'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'end_col_offset': 19, 'lineno': 60, 'src': '1609:105:0'}
for
{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}
normal
{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}
for
{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}
for
{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}
fine
make_graph
{'end_lineno': 64, 'node_id': 208, 'body': [{'end_lineno': 64, 'node_id': 217, 'body': [{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}], 'ast_type': 'If', 'col_offset': 7, 'orelse': [{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}], 'test': {'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'end_col_offset': 19, 'lineno': 60, 'src': '1609:105:0'}], 'col_offset': 4, 'ast_type': 'While', 'test': {'end_lineno': 59, 'node_id': 209, 'right': {'end_lineno': 59, 'node_id': 213, 'ast_type': 'Attribute', 'col_offset': 12, 'lineno': 59, 'end_col_offset': 27, 'attr': 'highestBid', 'src': '1584:15:0', 'value': {'end_lineno': 59, 'node_id': 214, 'id': 'self', 'col_offset': 12, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 16, 'src': '1584:4:0'}}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 59, 'node_id': 210, 'id': 'k', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 11, 'src': '1582:1:0'}, 'op': {'end_lineno': 59, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}, 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}, 'end_col_offset': 19, 'lineno': 59, 'src': '1576:138:0'}
{'end_lineno': 59, 'node_id': 209, 'right': {'end_lineno': 59, 'node_id': 213, 'ast_type': 'Attribute', 'col_offset': 12, 'lineno': 59, 'end_col_offset': 27, 'attr': 'highestBid', 'src': '1584:15:0', 'value': {'end_lineno': 59, 'node_id': 214, 'id': 'self', 'col_offset': 12, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 16, 'src': '1584:4:0'}}, 'ast_type': 'Compare', 'col_offset': 10, 'left': {'end_lineno': 59, 'node_id': 210, 'id': 'k', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 11, 'src': '1582:1:0'}, 'op': {'end_lineno': 59, 'node_id': 212, 'col_offset': 10, 'ast_type': 'Gt', 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}, 'lineno': 59, 'end_col_offset': 27, 'src': '1582:17:0'}
{'end_lineno': 59, 'node_id': 210, 'id': 'k', 'col_offset': 10, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 11, 'src': '1582:1:0'}
{'end_lineno': 59, 'node_id': 213, 'ast_type': 'Attribute', 'col_offset': 12, 'lineno': 59, 'end_col_offset': 27, 'attr': 'highestBid', 'src': '1584:15:0', 'value': {'end_lineno': 59, 'node_id': 214, 'id': 'self', 'col_offset': 12, 'ast_type': 'Name', 'lineno': 59, 'end_col_offset': 16, 'src': '1584:4:0'}}
make_graph
[{'end_lineno': 64, 'node_id': 217, 'body': [{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}], 'ast_type': 'If', 'col_offset': 7, 'orelse': [{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}], 'test': {'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'end_col_offset': 19, 'lineno': 60, 'src': '1609:105:0'}]
make_graph
{'end_lineno': 64, 'node_id': 217, 'body': [{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}], 'ast_type': 'If', 'col_offset': 7, 'orelse': [{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}], 'test': {'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'end_col_offset': 19, 'lineno': 60, 'src': '1609:105:0'}
{'end_lineno': 60, 'node_id': 218, 'right': {'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}, 'ast_type': 'Compare', 'col_offset': 11, 'left': {'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}, 'op': {'end_lineno': 60, 'node_id': 225, 'col_offset': 11, 'ast_type': 'Eq', 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}, 'lineno': 60, 'end_col_offset': 18, 'src': '1613:7:0'}
{'end_lineno': 60, 'node_id': 219, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 60, 'node_id': 222, 'col_offset': 13, 'ast_type': 'Index', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': {'end_lineno': 60, 'node_id': 223, 'col_offset': 13, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 14, 'src': '1615:1:0', 'value': 1}}, 'lineno': 60, 'end_col_offset': 15, 'src': '1613:4:0', 'value': {'end_lineno': 60, 'node_id': 220, 'id': 'k', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 60, 'end_col_offset': 12, 'src': '1613:1:0'}}
{'end_lineno': 60, 'node_id': 226, 'col_offset': 17, 'ast_type': 'Int', 'lineno': 60, 'end_col_offset': 18, 'src': '1619:1:0', 'value': 1}
make_graph
[{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}]
make_graph
{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}
{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}
ab
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.nani_e0': 'self.nani_e0', 'self.nani_e1': 'self.nani_e1', 'k_e0': 'k_e0', 'k_e1': 'k_e1', 'c': 'c', 'i': '0', 'count': 'count'}
{'end_lineno': 61, 'node_id': 227, 'col_offset': 11, 'ast_type': 'Assign', 'lineno': 61, 'end_col_offset': 27, 'target': {'end_lineno': 61, 'node_id': 228, 'col_offset': 11, 'ast_type': 'Subscript', 'slice': {'end_lineno': 61, 'node_id': 233, 'col_offset': 21, 'ast_type': 'Index', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': {'end_lineno': 61, 'node_id': 234, 'col_offset': 21, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 22, 'src': '1644:1:0', 'value': 1}}, 'lineno': 61, 'end_col_offset': 23, 'src': '1634:12:0', 'value': {'end_lineno': 61, 'node_id': 229, 'ast_type': 'Attribute', 'col_offset': 11, 'lineno': 61, 'end_col_offset': 20, 'attr': 'nani', 'src': '1634:9:0', 'value': {'end_lineno': 61, 'node_id': 230, 'id': 'self', 'col_offset': 11, 'ast_type': 'Name', 'lineno': 61, 'end_col_offset': 15, 'src': '1634:4:0'}}}, 'src': '1634:16:0', 'value': {'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}}
{'end_lineno': 61, 'node_id': 236, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 61, 'end_col_offset': 27, 'src': '1649:1:0', 'value': 9}
if
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.nani_e0': 'self.nani_e0', 'self.nani_e1': '9', 'k_e0': 'k_e0', 'k_e1': 'k_e1', 'c': 'c', 'i': '0', 'count': 'count'}
make_graph
[{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}]
make_graph
{'end_lineno': 64, 'iter': {'end_lineno': 63, 'func': {'end_lineno': 63, 'node_id': 241, 'id': 'range', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 25, 'src': '1684:5:0'}, 'node_id': 240, 'ast_type': 'Call', 'keywords': [], 'col_offset': 20, 'lineno': 63, 'end_col_offset': 29, 'args': [{'end_lineno': 63, 'node_id': 243, 'col_offset': 26, 'ast_type': 'Int', 'lineno': 63, 'end_col_offset': 28, 'src': '1690:2:0', 'value': 10}], 'src': '1684:9:0', 'keyword': None}, 'node_id': 237, 'body': [{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}], 'ast_type': 'For', 'col_offset': 11, 'lineno': 63, 'end_col_offset': 19, 'target': {'end_lineno': 63, 'node_id': 238, 'id': 'i', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 63, 'end_col_offset': 16, 'src': '1679:1:0'}, 'src': '1675:39:0'}
make_graph
[{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}]
make_graph
{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}
{'end_lineno': 64, 'node_id': 244, 'ast_type': 'AugAssign', 'col_offset': 15, 'op': {'end_lineno': 64, 'node_id': 247, 'col_offset': 15, 'ast_type': 'Sub', 'lineno': 64, 'end_col_offset': 19, 'src': '1710:4:0'}, 'lineno': 64, 'end_col_offset': 19, 'target': {'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}, 'src': '1710:4:0', 'value': {'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}}
{'end_lineno': 64, 'node_id': 245, 'id': 'k', 'col_offset': 15, 'ast_type': 'Name', 'lineno': 64, 'end_col_offset': 16, 'src': '1710:1:0'}
{'end_lineno': 64, 'node_id': 248, 'col_offset': 18, 'ast_type': 'Int', 'lineno': 64, 'end_col_offset': 19, 'src': '1713:1:0', 'value': 4}
if2
{'self.beneficiary': 'self.beneficiary', 'self.auctionStart': 'self.auctionStart', 'self.auctionEnd': 'self.auctionEnd', 'self.nani': 'self.nani', 'self.highestBidder': 'self.highestBidder', 'self.highestBid': 'self.highestBid', 'self.ended': 'self.ended', 'self.pendingReturns': 'self.pendingReturns', 'block.coinbase': 'block.coinbase', 'block.difficulty': 'block.difficulty', 'block.number': 'block.number', 'block.prevhash': 'block.prevhash', 'block.timestamp': 'block.timestamp', 'chain.id': 'chain.id', 'msg.gas': 'msg.gas', 'msg.sender': 'msg.sender', 'msg.value': 'msg.value', 'tx.origin': 'tx.origin', 'self.balance': 'self.balance', 'ZERO_ADDRESS': 'ZERO_ADDRESS', 'EMPTY_BYTES32': 'EMPTY_BYTES32', 'MAX_INT128': 'MAX_INT128', 'MIN_INT128': 'MIN_INT128', 'MAX_DECIMAL': 'MAX_DECIMAL', 'MIN_DECIMAL': 'MIN_DECIMAL', 'MAX_UINT256': 'MAX_UINT256', 'self.nani_e0': 'self.nani_e0', 'self.nani_e1': 'self.nani_e1', 'k_e0': 'k_e0', 'k_e1': 'k_e1', 'c': 'c', 'i': 'i+1', 'count': 'count', 'k': 'k-4'}
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR self.beneficiary self.auctionStart self.auctionEnd self.nani self.highestBidder self.highestBid self.ended self.pendingReturns block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 self.nani_e0 self.nani_e1 k_e0 k_e1 c i count)
(RULES
	l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: (k > highestBid)
	l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !((k > highestBid))
	l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: (k_e1 = 1)
	l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,9,k_e0,k_e1,c,0,count)) :|: !((k_e1 = 1))
	l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !((k > highestBid))
	l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,9,k_e0,k_e1,c,0,count)) :|: TRUE
	l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: i < count
	l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: i < count
	l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !(i < count)
	l6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: TRUE
	l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: (k > highestBid)
	)
for
{'end_lineno': 71, 'node_id': 255, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 71, 'end_col_offset': 61, 'annotation': {'end_lineno': 71, 'node_id': 258, 'id': 'uint256', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 27, 'src': '2016:7:0'}, 'target': {'end_lineno': 71, 'node_id': 256, 'id': 'pending_amount', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 18, 'src': '2000:14:0'}, 'src': '2000:57:0', 'value': {'end_lineno': 71, 'node_id': 260, 'col_offset': 30, 'ast_type': 'Subscript', 'slice': {'end_lineno': 71, 'node_id': 265, 'col_offset': 50, 'ast_type': 'Index', 'lineno': 71, 'end_col_offset': 60, 'src': '2046:10:0', 'value': {'end_lineno': 71, 'node_id': 266, 'ast_type': 'Attribute', 'col_offset': 50, 'lineno': 71, 'end_col_offset': 60, 'attr': 'sender', 'src': '2046:10:0', 'value': {'end_lineno': 71, 'node_id': 267, 'id': 'msg', 'col_offset': 50, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 53, 'src': '2046:3:0'}}}, 'lineno': 71, 'end_col_offset': 61, 'src': '2026:31:0', 'value': {'end_lineno': 71, 'node_id': 261, 'ast_type': 'Attribute', 'col_offset': 30, 'lineno': 71, 'end_col_offset': 49, 'attr': 'pendingReturns', 'src': '2026:19:0', 'value': {'end_lineno': 71, 'node_id': 262, 'id': 'self', 'col_offset': 30, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 34, 'src': '2026:4:0'}}}}
normal
{'end_lineno': 71, 'node_id': 255, 'ast_type': 'AnnAssign', 'col_offset': 4, 'simple': 1, 'lineno': 71, 'end_col_offset': 61, 'annotation': {'end_lineno': 71, 'node_id': 258, 'id': 'uint256', 'col_offset': 20, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 27, 'src': '2016:7:0'}, 'target': {'end_lineno': 71, 'node_id': 256, 'id': 'pending_amount', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 18, 'src': '2000:14:0'}, 'src': '2000:57:0', 'value': {'end_lineno': 71, 'node_id': 260, 'col_offset': 30, 'ast_type': 'Subscript', 'slice': {'end_lineno': 71, 'node_id': 265, 'col_offset': 50, 'ast_type': 'Index', 'lineno': 71, 'end_col_offset': 60, 'src': '2046:10:0', 'value': {'end_lineno': 71, 'node_id': 266, 'ast_type': 'Attribute', 'col_offset': 50, 'lineno': 71, 'end_col_offset': 60, 'attr': 'sender', 'src': '2046:10:0', 'value': {'end_lineno': 71, 'node_id': 267, 'id': 'msg', 'col_offset': 50, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 53, 'src': '2046:3:0'}}}, 'lineno': 71, 'end_col_offset': 61, 'src': '2026:31:0', 'value': {'end_lineno': 71, 'node_id': 261, 'ast_type': 'Attribute', 'col_offset': 30, 'lineno': 71, 'end_col_offset': 49, 'attr': 'pendingReturns', 'src': '2026:19:0', 'value': {'end_lineno': 71, 'node_id': 262, 'id': 'self', 'col_offset': 30, 'ast_type': 'Name', 'lineno': 71, 'end_col_offset': 34, 'src': '2026:4:0'}}}}
for
{'end_lineno': 73, 'node_id': 271, 'col_offset': 4, 'ast_type': 'Expr', 'lineno': 73, 'end_col_offset': 36, 'src': '2103:32:0', 'value': {'end_lineno': 73, 'func': {'end_lineno': 73, 'node_id': 273, 'id': 'send', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 73, 'end_col_offset': 8, 'src': '2103:4:0'}, 'node_id': 272, 'ast_type': 'Call', 'keywords': [], 'col_offset': 4, 'lineno': 73, 'end_col_offset': 36, 'args': [{'end_lineno': 73, 'node_id': 275, 'ast_type': 'Attribute', 'col_offset': 9, 'lineno': 73, 'end_col_offset': 19, 'attr': 'sender', 'src': '2108:10:0', 'value': {'end_lineno': 73, 'node_id': 276, 'id': 'msg', 'col_offset': 9, 'ast_type': 'Name', 'lineno': 73, 'end_col_offset': 12, 'src': '2108:3:0'}}, {'end_lineno': 73, 'node_id': 279, 'id': 'pending_amount', 'col_offset': 21, 'ast_type': 'Name', 'lineno': 73, 'end_col_offset': 35, 'src': '2120:14:0'}], 'src': '2103:32:0', 'keyword': None}}
fine
for
{'end_lineno': 99, 'node_id': 285, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 99, 'end_col_offset': 21, 'target': {'end_lineno': 99, 'node_id': 286, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 99, 'end_col_offset': 14, 'attr': 'ended', 'src': '3097:10:0', 'value': {'end_lineno': 99, 'node_id': 287, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 99, 'end_col_offset': 8, 'src': '3097:4:0'}}, 'src': '3097:17:0', 'value': {'end_lineno': 99, 'node_id': 290, 'col_offset': 17, 'ast_type': 'NameConstant', 'lineno': 99, 'end_col_offset': 21, 'src': '3110:4:0', 'value': True}}
normal
{'end_lineno': 99, 'node_id': 285, 'col_offset': 4, 'ast_type': 'Assign', 'lineno': 99, 'end_col_offset': 21, 'target': {'end_lineno': 99, 'node_id': 286, 'ast_type': 'Attribute', 'col_offset': 4, 'lineno': 99, 'end_col_offset': 14, 'attr': 'ended', 'src': '3097:10:0', 'value': {'end_lineno': 99, 'node_id': 287, 'id': 'self', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 99, 'end_col_offset': 8, 'src': '3097:4:0'}}, 'src': '3097:17:0', 'value': {'end_lineno': 99, 'node_id': 290, 'col_offset': 17, 'ast_type': 'NameConstant', 'lineno': 99, 'end_col_offset': 21, 'src': '3110:4:0', 'value': True}}
for
{'end_lineno': 102, 'node_id': 291, 'col_offset': 4, 'ast_type': 'Expr', 'lineno': 102, 'end_col_offset': 43, 'src': '3141:39:0', 'value': {'end_lineno': 102, 'func': {'end_lineno': 102, 'node_id': 293, 'id': 'send', 'col_offset': 4, 'ast_type': 'Name', 'lineno': 102, 'end_col_offset': 8, 'src': '3141:4:0'}, 'node_id': 292, 'ast_type': 'Call', 'keywords': [], 'col_offset': 4, 'lineno': 102, 'end_col_offset': 43, 'args': [{'end_lineno': 102, 'node_id': 295, 'ast_type': 'Attribute', 'col_offset': 9, 'lineno': 102, 'end_col_offset': 25, 'attr': 'beneficiary', 'src': '3146:16:0', 'value': {'end_lineno': 102, 'node_id': 296, 'id': 'self', 'col_offset': 9, 'ast_type': 'Name', 'lineno': 102, 'end_col_offset': 13, 'src': '3146:4:0'}}, {'end_lineno': 102, 'node_id': 299, 'ast_type': 'Attribute', 'col_offset': 27, 'lineno': 102, 'end_col_offset': 42, 'attr': 'highestBid', 'src': '3164:15:0', 'value': {'end_lineno': 102, 'node_id': 300, 'id': 'self', 'col_offset': 27, 'ast_type': 'Name', 'lineno': 102, 'end_col_offset': 31, 'src': '3164:4:0'}}], 'src': '3141:39:0', 'keyword': None}}
fine
[{143: '(GOAL COMPLEXITY)\n(STARTTERM (FUNCTIONSYMBOLS l0))\n(VAR self.beneficiary self.auctionStart self.auctionEnd self.nani self.highestBidder self.highestBid self.ended self.pendingReturns _beneficiary _bidding_time block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 self.bids.vals self.bids.vap x)\n(RULES\n\tl0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: (x > 5)\n\tl0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: !((x > 5))\n\tl1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x-self.bids.vals)) :|: (x > 5)\n\tl1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,_beneficiary,_bidding_time,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.bids.vals,self.bids.vap,x)) :|: !((x > 5))\n\t)'}, {208: '(GOAL COMPLEXITY)\n(STARTTERM (FUNCTIONSYMBOLS l0))\n(VAR self.beneficiary self.auctionStart self.auctionEnd self.nani self.highestBidder self.highestBid self.ended self.pendingReturns block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 self.nani_e0 self.nani_e1 k_e0 k_e1 c i count)\n(RULES\n\tl0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: (k > highestBid)\n\tl0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !((k > highestBid))\n\tl1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: (k_e1 = 1)\n\tl1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,9,k_e0,k_e1,c,0,count)) :|: !((k_e1 = 1))\n\tl1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !((k > highestBid))\n\tl2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,9,k_e0,k_e1,c,0,count)) :|: TRUE\n\tl4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: i < count\n\tl5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: i < count\n\tl5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,0,count)) :|: !(i < count)\n\tl6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: TRUE\n\tl3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0,self.nani_e1,k_e0,k_e1,c,i+1,count,k-4)) :|: (k > highestBid)\n\t)'}, {}, {}]
None
