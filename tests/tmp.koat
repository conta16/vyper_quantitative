(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR self.beneficiary self.auctionStart self.auctionEnd self.nani self.highestBidder self.highestBid self.ended self.pendingReturns block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 self.nani_e0_e0 self.nani_e1 k_e0 k_e1_e0 c i count)
(RULES
l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: k_e0 > self.highestBid
l0(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: k_e0 <= self.highestBid
l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: k_e1_e0 <= 1 && k_e1_e0 >= 1
l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,9,self.nani_e1,k_e0,k_e1_e0-10+5,c,0,count)) :|: k_e1_e0 > 1 
l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,9,self.nani_e1,k_e0,k_e1_e0-10+5,c,0,count)) :|:  k_e1_e0 < 1
l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l7(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: k_e0 <= self.highestBid
l2(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,9,self.nani_e1,k_e0,k_e1_e0-10+5,c,0,count)) :|: TRUE
l4(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: i < count
l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0-4,k_e1_e0,c,i+1,count)) :|: i < count
l5(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,0,count)) :|: i >= count
l6(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0-4,k_e1_e0,c,i+1,count)) :|: TRUE
l3(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0,k_e1_e0,c,i,count) -> Com_1(l1(self.beneficiary,self.auctionStart,self.auctionEnd,self.nani,self.highestBidder,self.highestBid,self.ended,self.pendingReturns,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,self.nani_e0_e0,self.nani_e1,k_e0-4,k_e1_e0,c,i+1,count)) :|: k_e0 > self.highestBid
)