(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS l0))
(VAR beneficiary block.coinbase block.difficulty block.number block.prevhash block.timestamp chain.id msg.gas msg.sender msg.value tx.origin self.balance ZERO_ADDRESS EMPTY_BYTES32 MAX_INT128 MIN_INT128 MAX_DECIMAL MIN_DECIMAL MAX_UINT256 x x_e0_e0 x_e0_e1 x_e1_e0 x_e1_e1 x_e2_e0 x_e2_e1 p y y.sender y.value z z.sender z.value h h_e0 h_e1 v0 v1 v2)
(RULES
l0(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p >= 10
l0(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p <= 1
l0(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: x_e0_e0 > 2
l0(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: x_e0_e0 < 2
l0(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l4(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p < 10  &&  p > 1  &&  x_e0_e0 <= 2  &&  x_e0_e0 >= 2
l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l2(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p+5+x_e0_e0,y,5,128,z,4,100,h,z,y,0,1,2)) :|: p > 0
l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l4(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p < 10  &&  p > 1  &&  x_e0_e0 <= 2  &&  x_e0_e0 >= 2
l2(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l3(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,1-p,y,y.sender,y.value+10,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: TRUE
l3(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,1-p,y,y.sender,y.value+10,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p >= 10
l3(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,1-p,y,y.sender,y.value+10,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: p <= 1
l3(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,1-p,y,y.sender,y.value+10,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: x_e0_e0 > 2
l3(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,p,y,y.sender,y.value,z,z.sender,z.value,h,h_e0,h_e1,v0,v1,v2) -> Com_1(l1(beneficiary,block.coinbase,block.difficulty,block.number,block.prevhash,block.timestamp,chain.id,msg.gas,msg.sender,msg.value,tx.origin,self.balance,ZERO_ADDRESS,EMPTY_BYTES32,MAX_INT128,MIN_INT128,MAX_DECIMAL,MIN_DECIMAL,MAX_UINT256,x,x_e0_e0,x_e0_e1,x_e1_e0,x_e1_e1,x_e2_e0,x_e2_e1,1-p,y,y.sender,y.value+10,z,z.sender,z.value,h,h_e0,h_e1,0,1,2)) :|: x_e0_e0 < 2
)